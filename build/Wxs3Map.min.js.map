{"version":3,"sources":["webpack:///Wxs3Map.min.js","webpack:///webpack/bootstrap 22e4c13182993163ee03","webpack:///./src/index.js","webpack:///external \"_\"","webpack:///./src/ThreeDMapUntiled.js","webpack:///external \"THREE\"","webpack:///external \"TrackballControls\"","webpack:///./tiff-js/tiff.js","webpack:///./src/util/createQueryString.js","webpack:///./src/util/events.js","webpack:///./src/Line/Line.js","webpack:///./src/Line/clampLineString.js","webpack:///./src/Line/checkIntersect.js","webpack:///./src/Line/lineIntersect.js","webpack:///./src/util/transform.js","webpack:///external \"proj4\"","webpack:///./src/Texture.js","webpack:///./src/Terrain.js","webpack:///./src/Profiles.js","webpack:///./src/Envelope.js"],"names":["Wxs3Map","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","extendDefaults","config","texture","_","extend","defaults","terrain","confExtended","Dimensions","imgWidth","imgHeight","div","document","getElementById","width","clientWidth","height","clientHeight","envelope","_Envelope2","bbox","crs","bboxCrs","metersWidth","metersHeight","imgCoefficient","Math","round","demWidth","pixelsPerVertex","demHeight","wcsResolution","proportionWidth","proportionHeight","proportionAverage","zInv","zMult","profiles","dimensions","_Texture2","_Terrain2","_Profiles2","_ThreeDMapUntiled2","defineProperty","value","_underscore","_ThreeDMapUntiled","_Texture","_Terrain","_Profiles","_Envelope","wireframe","type","wmsUrl","wmsLayers","wmsFormat","wmsFormatMode","wcsUrl","coverage","format","showBox","boxColor","window","_three","_three2","_three3","_tiff","_createQueryString","_events","_events2","_Line","_Line2","ThreeDMapUntiled","dim","this","events","reloadTimer","linesToClamp","_renderer","_createRenderer","_camera","_createCamera","_controls","_createControls","_material","_createMaterial","mesh","_createMesh","_scene","_createScene","appendChild","domElement","_render","fire","loadTerrain","_terrainLoaded","bind","loadTexture","_textureLoaded","addEventListener","_resizeMe","on","_clampLines","event","callback","context","add","getSides","load","_profilesLoaded","meshes","each","renderer","WebGLRenderer","alpha","setSize","scene","Scene","AmbientLight","cameraHeight","fov","camera","PerspectiveCamera","Z","sideLength","canvCoefficient","tan","PI","position","set","material","MeshPhongMaterial","side","FrontSide","DoubleSide","Mesh","getGeometry","update","requestAnimationFrame","render","clearTimeout","setTimeout","_reloadAll","aspect","updateProjectionMatrix","addLine","lineGeom","lineStyle","line","threeLine","getThreeLine","needsClamp","push","oldLine","clamped","clamp","remove","THREE","TrackballControls","TIFFParser","tiffDataView","undefined","littleEndian","fileDirectories","isLittleEndian","BOM","getBytes","console","log","TypeError","hasTowel","RangeError","getFieldTagName","fieldTag","fieldTagName","fieldTagNames","315","258","265","264","320","259","33432","306","338","266","289","288","291","290","316","270","257","256","271","281","280","272","254","274","262","284","296","278","277","305","279","273","255","263","282","283","326","327","343","328","433","434","269","336","321","346","347","285","297","317","319","532","339","559","330","292","293","325","323","324","322","301","318","344","286","529","531","530","345","287","37378","40961","36868","36867","34665","36864","33434","41728","37385","40960","33437","42016","37384","37500","37377","37510","33723","34675","700","42112","42113","34377","getFieldTypeName","fieldType","fieldTypeName","fieldTypeNames","1","2","3","4","5","6","7","8","9","10","11","12","getFieldTypeLength","fieldTypeLength","indexOf","getBits","numBits","byteOffset","bitOffset","extraBytes","floor","newByteOffset","totalBits","shiftRight","shiftLeft","rawBits","getUint8","getUint16","getUint32","chunkInfo","bits","numBytes","offset","getFieldValues","typeCount","valueOffset","fieldValues","fieldValueSize","i","indexOffset","forEach","e","a","String","fromCharCode","clampColorSample","colorSample","bitsPerSample","multiplier","pow","makeRGBAFillValue","r","g","b","parseFileDirectory","numDirEntries","tiffFields","entryCount","values","nextIFDByteOffset","parseTIFF","tiffArrayBuffer","canvas","createElement","DataView","firstIFDByteOffset","fileDirectory","imageWidth","ImageWidth","imageLength","ImageLength","strips","compression","Compression","samplesPerPixel","SamplesPerPixel","sampleProperties","bitsPerPixel","hasBytesPerPixel","BitsPerSample","bitsPerSampleValues","hasBytesPerSample","bytesPerSample","bytesPerPixel","stripOffsetValues","StripOffsets","numStripOffsetValues","length","StripByteCounts","stripByteCountValues","Error","ceil","stripOffset","stripByteCount","jIncrement","getHeader","pixel","sample","currentSample","sampleInfo","sampleOffset","getFloat32","blockLength","iterations","header","getInt8","currentByte","createQueryString","params","map","encodeURIComponent","join","observers","data","observer","ALine","style","geometry","_createLine","points","color","vertices","point","Vector3","x","y","z","LineBasicMaterial","Geometry","Line","coordMinX","minX","coordMinY","minY","computeBoundingBox","boundingBox","pixelMinX","min","pixelMinY","pixelWidth","abs","max","pixelHeight","xFactor","yFactor","linedata","coordinates","coord","_transform2","mapCrs","pixelX","pixelY","_clampLineString2","styleDefaults","linewidth","_clampLineString","_transform","calcZ","p1","p2","p3","det","l1","l2","l3","getDistance","sqrt","clampLineSegment","l","chain","faces","face","line1","line2","line3","ints","_checkIntersect2","_lineIntersect2","intersect","dist","flatten","sortBy","clampLineString","range","_checkIntersect","_lineIntersect","Turn","d","f","A","B","Number","EPSILON","checkIntersect","p4","lineIntersect","ua","ub","x1","y1","x2","y2","x3","y3","x4","y4","denom","transform","from","to","_index2","_index","defs","proj4","Texture","textureConfig","_getImageMap","imgUrl","service","version","request","WIDTH","HEIGHT","layers","_createQueryString2","loader","TextureLoader","image","minFilter","LinearFilter","needsUpdate","xhr","_tiff2","Terrain","terrainConfig","_getTiffHeights","tiffParser","tiffArray","response","heights","j","k","parseInt","_getXYZHeights","numVertices","lines","responseText","split","_parseHeights","isTiff","minHeight","maxHeight","midHeight","_createGeometry","PlaneGeometry","verticesNeedUpdate","demRequest","XMLHttpRequest","SERVICE","VERSION","REQUEST","COVERAGE","FORMAT","CRS","RESPONSE_CRS","wcsCall","responseType","open","onreadystatechange","readyState","send","_createSideMesh","filter","vertex","first","clone","last","sideGeometry","unshift","Face3","MeshBasicMaterial","backGeom","group","Group","filterLeft","filterBottom","filterRight","filterTop","Profiles","_transformPoint","sSource","sDest","_createProfile","profile","verticalGeometry","verticalMaterial","transparent","crsSource","crsDestination","pointStart","xyStart","pointEnd","xyEnd","newStartX","kX","newStartY","kY","newEndX","newEndY","newStartZ","zStart","newEndZ","zEnd","verticalMesh","modelLL","modelUR","Envelope","getBbox","parseFloat","ne","sw","concat"],"mappings":"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","file":"Wxs3Map.min.js","sourcesContent":["var Wxs3Map =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _ThreeDMapUntiled = __webpack_require__(2);\n\t\n\tvar _ThreeDMapUntiled2 = _interopRequireDefault(_ThreeDMapUntiled);\n\t\n\tvar _Texture = __webpack_require__(14);\n\t\n\tvar _Texture2 = _interopRequireDefault(_Texture);\n\t\n\tvar _Terrain = __webpack_require__(15);\n\t\n\tvar _Terrain2 = _interopRequireDefault(_Terrain);\n\t\n\tvar _Profiles = __webpack_require__(16);\n\t\n\tvar _Profiles2 = _interopRequireDefault(_Profiles);\n\t\n\tvar _Envelope = __webpack_require__(17);\n\t\n\tvar _Envelope2 = _interopRequireDefault(_Envelope);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar defaults = {\n\t    div: null,\n\t    bbox: null,\n\t    bboxCrs: 'EPSG:4326',\n\t    wireframe: false,\n\t    zMult: 1,\n\t    zInv: false,\n\t    crs: 'EPSG:32633',\n\t    texture: {\n\t        type: 'wms',\n\t        wmsUrl: 'http://openwms.statkart.no/skwms1/wms.topo2',\n\t        wmsLayers: 'topo2_WMS',\n\t        wmsFormat: 'image/png',\n\t        wmsFormatMode: ''\n\t    },\n\t    terrain: {\n\t        pixelsPerVertex: 8, //the resolution of the height model in the image\n\t        wcsUrl: 'http://wms.geonorge.no/skwms1/wcs.dtm',\n\t        wcsResolution: 10, //resolution of grid cell in meters\n\t        coverage: 'land_utm33_10m',\n\t        format: 'geotiff',\n\t        showBox: true,\n\t        boxColor: 0xdddddd\n\t    },\n\t    profiles: null\n\t};\n\t\n\tfunction extendDefaults(config) {\n\t    var texture = _.extend({}, defaults.texture, config.texture || {});\n\t    var terrain = _.extend({}, defaults.terrain, config.terrain || {});\n\t    var confExtended = _.extend({}, defaults, config);\n\t    confExtended.texture = texture;\n\t    confExtended.terrain = terrain;\n\t    return confExtended;\n\t};\n\t\n\tfunction Dimensions(config) {\n\t\n\t    var div = document.getElementById(config.div);\n\t    var width = div.clientWidth;\n\t    var height = div.clientHeight;\n\t\n\t    var envelope = (0, _Envelope2.default)(config.bbox, config.crs, config.bboxCrs);\n\t\n\t    var metersWidth = envelope.width();\n\t    var metersHeight = envelope.height();\n\t\n\t    //Adjust output image to canvas if not specified\n\t    var imgWidth, imgHeight;\n\t    if (!config.texture.imgWidth || !config.texture.imgHeight) {\n\t        var imgCoefficient = metersWidth / metersHeight;\n\t        if (width / height < imgCoefficient) {\n\t            imgWidth = width;\n\t            imgHeight = Math.round(imgWidth / imgCoefficient);\n\t        } else {\n\t            imgHeight = height;\n\t            imgWidth = Math.round(imgHeight * imgCoefficient);\n\t        }\n\t    } else {\n\t        imgWidth = config.texture.imgWidth;\n\t        imgHeight = config.texture.imgHeight;\n\t    }\n\t\n\t    //Compute the resolution of the height model in the image (pixelsPerVertex)\n\t    var demWidth = Math.round(imgWidth / config.terrain.pixelsPerVertex);\n\t    var demHeight = Math.round(imgHeight / config.terrain.pixelsPerVertex);\n\t\n\t    if (demWidth > metersWidth / config.terrain.wcsResolution) {\n\t        //ajust to avoid stairs in the model - reduce dem to actual resolution\n\t        demWidth = Math.round(metersWidth / config.terrain.wcsResolution);\n\t        demHeight = Math.round(metersHeight / config.terrain.wcsResolution);\n\t    }\n\t\n\t    // mapunits between vertexes in x-dimention\n\t    var proportionWidth = metersWidth / demWidth;\n\t\n\t    // mapunits between vertexes in y-dimention\n\t    var proportionHeight = metersHeight / demHeight;\n\t\n\t    // average mapunits between vertexes\n\t    var proportionAverage = (proportionWidth + proportionHeight) / 2;\n\t\n\t    if (config.zInv) {\n\t        proportionAverage = proportionAverage * -1;\n\t    }\n\t    var zMult;\n\t    if (config.zMult) {\n\t        zMult = proportionAverage / config.zMult;\n\t    } else {\n\t        zMult = proportionAverage;\n\t    }\n\t\n\t    return {\n\t        config: config,\n\t        div: div,\n\t        envelope: envelope,\n\t        width: width,\n\t        height: height,\n\t        imgWidth: imgWidth,\n\t        imgHeight: imgHeight,\n\t        demWidth: demWidth,\n\t        demHeight: demHeight,\n\t        zMult: zMult,\n\t        crs: config.crs\n\t    };\n\t}\n\t\n\tfunction Wxs3Map(config) {\n\t    config = extendDefaults(config || {});\n\t    var dimensions = Dimensions(config);\n\t    var texture = (0, _Texture2.default)(config.texture, dimensions);\n\t    var terrain = (0, _Terrain2.default)(config.terrain, dimensions);\n\t    var profiles;\n\t    if (config.profiles) {\n\t        profiles = (0, _Profiles2.default)(config.profiles, terrain, dimensions);\n\t    }\n\t    return new _ThreeDMapUntiled2.default(dimensions, terrain, texture, profiles);\n\t}\n\t\n\twindow.Wxs3Map = Wxs3Map;\n\t\n\texports.default = Wxs3Map;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = _;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _three2 = __webpack_require__(4);\n\t\n\tvar _three3 = _interopRequireDefault(_three2);\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _tiff = __webpack_require__(5);\n\t\n\tvar _tiff2 = _interopRequireDefault(_tiff);\n\t\n\tvar _createQueryString = __webpack_require__(6);\n\t\n\tvar _createQueryString2 = _interopRequireDefault(_createQueryString);\n\t\n\tvar _events = __webpack_require__(7);\n\t\n\tvar _events2 = _interopRequireDefault(_events);\n\t\n\tvar _Line = __webpack_require__(8);\n\t\n\tvar _Line2 = _interopRequireDefault(_Line);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ThreeDMapUntiled = function ThreeDMapUntiled(dim, terrain, texture, profiles) {\n\t    this.dim = dim;\n\t    this.terrain = terrain;\n\t    this.texture = texture;\n\t    this.profiles = profiles;\n\t    this.events = (0, _events2.default)();\n\t\n\t    this.reloadTimer = -1;\n\t\n\t    this.linesToClamp = [];\n\t\n\t    this._renderer = this._createRenderer();\n\t    this._camera = this._createCamera();\n\t    this._controls = this._createControls();\n\t    this._material = this._createMaterial();\n\t\n\t    //Create Mesh and Scene\n\t    var mesh = this._createMesh();\n\t    this._scene = this._createScene(mesh);\n\t\n\t    //Add webgl canvas to div\n\t    this.dim.div.appendChild(this._renderer.domElement);\n\t\n\t    //Start renderer and listen to changes in geometry\n\t    this._render();\n\t\n\t    //Load height model and texture asynchronously\n\t    this.events.fire('onTerrainLoadStart');\n\t    this.terrain.loadTerrain(this._terrainLoaded.bind(this));\n\t\n\t    this.events.fire('onTextureLoadStart');\n\t    this.texture.loadTexture(this._material, this._textureLoaded.bind(this));\n\t\n\t    //Adust canvas if container is resized\n\t    window.addEventListener('resize', this._resizeMe.bind(this), false);\n\t    this.on('onTerrainLoadEnd', this._clampLines, this);\n\t};\n\t\n\tThreeDMapUntiled.prototype.on = function (event, callback, context) {\n\t    this.events.on(event, callback, context);\n\t};\n\t\n\tThreeDMapUntiled.prototype._terrainLoaded = function () {\n\t    this.events.fire('onTerrainLoadEnd');\n\t    this._scene.add(this.terrain.getSides());\n\t\n\t    if (this.profiles) {\n\t        this.profiles.load(this._profilesLoaded.bind(this));\n\t    }\n\t};\n\t\n\tThreeDMapUntiled.prototype._profilesLoaded = function (meshes) {\n\t    _.each(meshes, function (mesh) {\n\t        this._scene.add(mesh);\n\t    }, this);\n\t};\n\t\n\tThreeDMapUntiled.prototype._textureLoaded = function (texture) {\n\t    this.events.fire('onTextureLoadEnd');\n\t};\n\t\n\tThreeDMapUntiled.prototype._createRenderer = function () {\n\t    var renderer = new _three.WebGLRenderer({\n\t        alpha: true\n\t    });\n\t    renderer.setSize(this.dim.width, this.dim.height);\n\t    return renderer;\n\t};\n\t\n\tThreeDMapUntiled.prototype._createScene = function (mesh) {\n\t    var scene = new _three.Scene();\n\t\n\t    //Ambient Light for MeshPhongMaterial\n\t    scene.add(new _three.AmbientLight(0xffffff));\n\t    scene.add(mesh);\n\t\n\t    return scene;\n\t};\n\t\n\tThreeDMapUntiled.prototype._createCamera = function () {\n\t    var fov = 45,\n\t        cameraHeight;\n\t\n\t    var camera = new _three.PerspectiveCamera(fov, this.dim.width / this.dim.height, 0.1, 1000);\n\t\n\t    // Some trig to find height for camera\n\t    if (!!this.dim.Z) {\n\t        cameraHeight = this.dim.Z;\n\t    } else {\n\t        //Adapt optimal side length according to canvas\n\t        var sideLength;\n\t        var canvCoefficient = this.dim.width / this.dim.height;\n\t        if (canvCoefficient < this.dim.demWidth / this.dim.demHeight) {\n\t            sideLength = this.dim.demWidth / canvCoefficient;\n\t        } else {\n\t            sideLength = this.dim.demHeight;\n\t        }\n\t\n\t        //calculate camera height\n\t        cameraHeight = sideLength / 2 / Math.tan(fov / 2 * Math.PI / 180);\n\t    }\n\t\n\t    camera.position.set(0, 0, cameraHeight);\n\t    return camera;\n\t};\n\t\n\tThreeDMapUntiled.prototype._createMaterial = function () {\n\t    var material = new _three.MeshPhongMaterial({ //for shading and Ambient Light\n\t        side: this.terrain.showBox ? _three.FrontSide : _three.DoubleSide\n\t    });\n\t    material.wireframe = this.dim.wireframe;\n\t    return material;\n\t};\n\t\n\tThreeDMapUntiled.prototype._createMesh = function () {\n\t    return new _three.Mesh(this.terrain.getGeometry(), this._material);\n\t};\n\t\n\tThreeDMapUntiled.prototype._createControls = function () {\n\t    return new _three3.default(this._camera);\n\t};\n\t\n\tThreeDMapUntiled.prototype._render = function () {\n\t    this._controls.update();\n\t    window.requestAnimationFrame(this._render.bind(this));\n\t    this._renderer.render(this._scene, this._camera);\n\t};\n\t\n\tThreeDMapUntiled.prototype._resizeMe = function () {\n\t    window.clearTimeout(this.reloadTimer);\n\t    this.reloadTimer = window.setTimeout(this._reloadAll.bind(this), 1000);\n\t    return;\n\t};\n\t\n\tThreeDMapUntiled.prototype._reloadAll = function () {\n\t    this.dim.width = this.dim.div.clientWidth;\n\t    this.dim.height = this.dim.div.clientHeight;\n\t\n\t    this._camera.aspect = this.dim.width / this.dim.height;\n\t    this._camera.updateProjectionMatrix();\n\t\n\t    delete this._controls;\n\t    this._controls = this._createControls();\n\t    this._renderer.setSize(this.dim.width, this.dim.height);\n\t};\n\t\n\tThreeDMapUntiled.prototype.addLine = function (lineGeom, lineStyle) {\n\t    var line = (0, _Line2.default)(lineGeom, lineStyle, this.terrain.getGeometry(), this.dim.envelope);\n\t    var threeLine = line.getThreeLine();\n\t    this._scene.add(threeLine);\n\t    if (line.needsClamp()) {\n\t        this.linesToClamp.push(line);\n\t    }\n\t};\n\t\n\tThreeDMapUntiled.prototype._clampLines = function () {\n\t    _.each(this.linesToClamp, function (line) {\n\t        var oldLine = line.getThreeLine();\n\t        var clamped = line.clamp();\n\t        this._scene.remove(oldLine);\n\t        this._scene.add(clamped);\n\t    }, this);\n\t    this.linesToClamp = [];\n\t};\n\t\n\texports.default = ThreeDMapUntiled;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = THREE;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TrackballControls;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* This Source Code Form is subject to the terms of the Mozilla Public\r\n\t * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n\t * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\t\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tfunction TIFFParser() {\n\t\tthis.tiffDataView = undefined;\n\t\tthis.littleEndian = undefined;\n\t\tthis.fileDirectories = [];\n\t};\n\t\n\tTIFFParser.prototype = {\n\t\tisLittleEndian: function isLittleEndian() {\n\t\t\t// Get byte order mark.\n\t\t\tvar BOM = this.getBytes(2, 0);\n\t\n\t\t\t// Find out the endianness.\n\t\t\tif (BOM === 0x4949) {\n\t\t\t\tthis.littleEndian = true;\n\t\t\t} else if (BOM === 0x4D4D) {\n\t\t\t\tthis.littleEndian = false;\n\t\t\t} else {\n\t\t\t\tconsole.log(BOM);\n\t\t\t\tthrow TypeError(\"Invalid byte order value.\");\n\t\t\t}\n\t\n\t\t\treturn this.littleEndian;\n\t\t},\n\t\n\t\thasTowel: function hasTowel() {\n\t\t\t// Check for towel.\n\t\t\tif (this.getBytes(2, 2) !== 42) {\n\t\t\t\tthrow RangeError(\"You forgot your towel!\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t},\n\t\n\t\tgetFieldTagName: function getFieldTagName(fieldTag) {\n\t\t\t// See: http://www.digitizationguidelines.gov/guidelines/TIFF_Metadata_Final.pdf\n\t\t\t// See: http://www.digitalpreservation.gov/formats/content/tiff_tags.shtml\n\t\t\tvar fieldTagNames = {\n\t\t\t\t// TIFF Baseline\n\t\t\t\t0x013B: 'Artist',\n\t\t\t\t0x0102: 'BitsPerSample',\n\t\t\t\t0x0109: 'CellLength',\n\t\t\t\t0x0108: 'CellWidth',\n\t\t\t\t0x0140: 'ColorMap',\n\t\t\t\t0x0103: 'Compression',\n\t\t\t\t0x8298: 'Copyright',\n\t\t\t\t0x0132: 'DateTime',\n\t\t\t\t0x0152: 'ExtraSamples',\n\t\t\t\t0x010A: 'FillOrder',\n\t\t\t\t0x0121: 'FreeByteCounts',\n\t\t\t\t0x0120: 'FreeOffsets',\n\t\t\t\t0x0123: 'GrayResponseCurve',\n\t\t\t\t0x0122: 'GrayResponseUnit',\n\t\t\t\t0x013C: 'HostComputer',\n\t\t\t\t0x010E: 'ImageDescription',\n\t\t\t\t0x0101: 'ImageLength',\n\t\t\t\t0x0100: 'ImageWidth',\n\t\t\t\t0x010F: 'Make',\n\t\t\t\t0x0119: 'MaxSampleValue',\n\t\t\t\t0x0118: 'MinSampleValue',\n\t\t\t\t0x0110: 'Model',\n\t\t\t\t0x00FE: 'NewSubfileType',\n\t\t\t\t0x0112: 'Orientation',\n\t\t\t\t0x0106: 'PhotometricInterpretation',\n\t\t\t\t0x011C: 'PlanarConfiguration',\n\t\t\t\t0x0128: 'ResolutionUnit',\n\t\t\t\t0x0116: 'RowsPerStrip',\n\t\t\t\t0x0115: 'SamplesPerPixel',\n\t\t\t\t0x0131: 'Software',\n\t\t\t\t0x0117: 'StripByteCounts',\n\t\t\t\t0x0111: 'StripOffsets',\n\t\t\t\t0x00FF: 'SubfileType',\n\t\t\t\t0x0107: 'Threshholding',\n\t\t\t\t0x011A: 'XResolution',\n\t\t\t\t0x011B: 'YResolution',\n\t\n\t\t\t\t// TIFF Extended\n\t\t\t\t0x0146: 'BadFaxLines',\n\t\t\t\t0x0147: 'CleanFaxData',\n\t\t\t\t0x0157: 'ClipPath',\n\t\t\t\t0x0148: 'ConsecutiveBadFaxLines',\n\t\t\t\t0x01B1: 'Decode',\n\t\t\t\t0x01B2: 'DefaultImageColor',\n\t\t\t\t0x010D: 'DocumentName',\n\t\t\t\t0x0150: 'DotRange',\n\t\t\t\t0x0141: 'HalftoneHints',\n\t\t\t\t0x015A: 'Indexed',\n\t\t\t\t0x015B: 'JPEGTables',\n\t\t\t\t0x011D: 'PageName',\n\t\t\t\t0x0129: 'PageNumber',\n\t\t\t\t0x013D: 'Predictor',\n\t\t\t\t0x013F: 'PrimaryChromaticities',\n\t\t\t\t0x0214: 'ReferenceBlackWhite',\n\t\t\t\t0x0153: 'SampleFormat',\n\t\t\t\t0x022F: 'StripRowCounts',\n\t\t\t\t0x014A: 'SubIFDs',\n\t\t\t\t0x0124: 'T4Options',\n\t\t\t\t0x0125: 'T6Options',\n\t\t\t\t0x0145: 'TileByteCounts',\n\t\t\t\t0x0143: 'TileLength',\n\t\t\t\t0x0144: 'TileOffsets',\n\t\t\t\t0x0142: 'TileWidth',\n\t\t\t\t0x012D: 'TransferFunction',\n\t\t\t\t0x013E: 'WhitePoint',\n\t\t\t\t0x0158: 'XClipPathUnits',\n\t\t\t\t0x011E: 'XPosition',\n\t\t\t\t0x0211: 'YCbCrCoefficients',\n\t\t\t\t0x0213: 'YCbCrPositioning',\n\t\t\t\t0x0212: 'YCbCrSubSampling',\n\t\t\t\t0x0159: 'YClipPathUnits',\n\t\t\t\t0x011F: 'YPosition',\n\t\n\t\t\t\t// EXIF\n\t\t\t\t0x9202: 'ApertureValue',\n\t\t\t\t0xA001: 'ColorSpace',\n\t\t\t\t0x9004: 'DateTimeDigitized',\n\t\t\t\t0x9003: 'DateTimeOriginal',\n\t\t\t\t0x8769: 'Exif IFD',\n\t\t\t\t0x9000: 'ExifVersion',\n\t\t\t\t0x829A: 'ExposureTime',\n\t\t\t\t0xA300: 'FileSource',\n\t\t\t\t0x9209: 'Flash',\n\t\t\t\t0xA000: 'FlashpixVersion',\n\t\t\t\t0x829D: 'FNumber',\n\t\t\t\t0xA420: 'ImageUniqueID',\n\t\t\t\t0x9208: 'LightSource',\n\t\t\t\t0x927C: 'MakerNote',\n\t\t\t\t0x9201: 'ShutterSpeedValue',\n\t\t\t\t0x9286: 'UserComment',\n\t\n\t\t\t\t// IPTC\n\t\t\t\t0x83BB: 'IPTC',\n\t\n\t\t\t\t// ICC\n\t\t\t\t0x8773: 'ICC Profile',\n\t\n\t\t\t\t// XMP\n\t\t\t\t0x02BC: 'XMP',\n\t\n\t\t\t\t// GDAL\n\t\t\t\t0xA480: 'GDAL_METADATA',\n\t\t\t\t0xA481: 'GDAL_NODATA',\n\t\n\t\t\t\t// Photoshop\n\t\t\t\t0x8649: 'Photoshop'\n\t\t\t};\n\t\n\t\t\tvar fieldTagName;\n\t\n\t\t\tif (fieldTag in fieldTagNames) {\n\t\t\t\tfieldTagName = fieldTagNames[fieldTag];\n\t\t\t} else {\n\t\t\t\t//console.log( \"Unknown Field Tag:\", fieldTag);\n\t\t\t\tfieldTagName = \"Tag\" + fieldTag;\n\t\t\t}\n\t\n\t\t\treturn fieldTagName;\n\t\t},\n\t\n\t\tgetFieldTypeName: function getFieldTypeName(fieldType) {\n\t\t\tvar fieldTypeNames = {\n\t\t\t\t0x0001: 'BYTE',\n\t\t\t\t0x0002: 'ASCII',\n\t\t\t\t0x0003: 'SHORT',\n\t\t\t\t0x0004: 'LONG',\n\t\t\t\t0x0005: 'RATIONAL',\n\t\t\t\t0x0006: 'SBYTE',\n\t\t\t\t0x0007: 'UNDEFINED',\n\t\t\t\t0x0008: 'SSHORT',\n\t\t\t\t0x0009: 'SLONG',\n\t\t\t\t0x000A: 'SRATIONAL',\n\t\t\t\t0x000B: 'FLOAT',\n\t\t\t\t0x000C: 'DOUBLE'\n\t\t\t};\n\t\n\t\t\tvar fieldTypeName;\n\t\n\t\t\tif (fieldType in fieldTypeNames) {\n\t\t\t\tfieldTypeName = fieldTypeNames[fieldType];\n\t\t\t}\n\t\n\t\t\treturn fieldTypeName;\n\t\t},\n\t\n\t\tgetFieldTypeLength: function getFieldTypeLength(fieldTypeName) {\n\t\t\tvar fieldTypeLength;\n\t\n\t\t\tif (['BYTE', 'ASCII', 'SBYTE', 'UNDEFINED'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\tfieldTypeLength = 1;\n\t\t\t} else if (['SHORT', 'SSHORT'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\tfieldTypeLength = 2;\n\t\t\t} else if (['LONG', 'SLONG', 'FLOAT'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\tfieldTypeLength = 4;\n\t\t\t} else if (['RATIONAL', 'SRATIONAL', 'DOUBLE'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\tfieldTypeLength = 8;\n\t\t\t}\n\t\n\t\t\treturn fieldTypeLength;\n\t\t},\n\t\n\t\tgetBits: function getBits(numBits, byteOffset, bitOffset) {\n\t\t\tbitOffset = bitOffset || 0;\n\t\t\tvar extraBytes = Math.floor(bitOffset / 8);\n\t\t\tvar newByteOffset = byteOffset + extraBytes;\n\t\t\tvar totalBits = bitOffset + numBits;\n\t\t\tvar shiftRight = 32 - numBits;\n\t\n\t\t\tif (totalBits <= 0) {\n\t\t\t\tconsole.log(numBits, byteOffset, bitOffset);\n\t\t\t\tthrow RangeError(\"No bits requested\");\n\t\t\t} else if (totalBits <= 8) {\n\t\t\t\tvar shiftLeft = 24 + bitOffset;\n\t\t\t\tvar rawBits = this.tiffDataView.getUint8(newByteOffset, this.littleEndian);\n\t\t\t} else if (totalBits <= 16) {\n\t\t\t\tvar shiftLeft = 16 + bitOffset;\n\t\t\t\tvar rawBits = this.tiffDataView.getUint16(newByteOffset, this.littleEndian);\n\t\t\t} else if (totalBits <= 32) {\n\t\t\t\tvar shiftLeft = bitOffset;\n\t\t\t\tvar rawBits = this.tiffDataView.getUint32(newByteOffset, this.littleEndian);\n\t\t\t} else {\n\t\t\t\tconsole.log(numBits, byteOffset, bitOffset);\n\t\t\t\tthrow RangeError(\"Too many bits requested\");\n\t\t\t}\n\t\n\t\t\tvar chunkInfo = {\n\t\t\t\t'bits': rawBits << shiftLeft >>> shiftRight,\n\t\t\t\t'byteOffset': newByteOffset + Math.floor(totalBits / 8),\n\t\t\t\t'bitOffset': totalBits % 8\n\t\t\t};\n\t\n\t\t\treturn chunkInfo;\n\t\t},\n\t\n\t\tgetBytes: function getBytes(numBytes, offset) {\n\t\t\tif (numBytes <= 0) {\n\t\t\t\tconsole.log(numBytes, offset);\n\t\t\t\tthrow RangeError(\"No bytes requested\");\n\t\t\t} else if (numBytes <= 1) {\n\t\t\t\treturn this.tiffDataView.getUint8(offset, this.littleEndian);\n\t\t\t} else if (numBytes <= 2) {\n\t\t\t\treturn this.tiffDataView.getUint16(offset, this.littleEndian);\n\t\t\t} else if (numBytes <= 3) {\n\t\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian) >>> 8;\n\t\t\t} else if (numBytes <= 4) {\n\t\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian);\n\t\t\t\t//return this.tiffDataView.getFloat32(offset, this.littleEndian);\n\t\t\t} else {\n\t\t\t\tconsole.log(numBytes, offset);\n\t\t\t\tthrow RangeError(\"Too many bytes requested\");\n\t\t\t}\n\t\t},\n\t\n\t\tgetFieldValues: function getFieldValues(fieldTagName, fieldTypeName, typeCount, valueOffset) {\n\t\t\tvar fieldValues = [];\n\t\n\t\t\tvar fieldTypeLength = this.getFieldTypeLength(fieldTypeName);\n\t\t\tvar fieldValueSize = fieldTypeLength * typeCount;\n\t\n\t\t\tif (fieldValueSize <= 4) {\n\t\t\t\t// The value is stored at the big end of the valueOffset.\n\t\t\t\tif (this.littleEndian === false) {\n\t\t\t\t\tvar value = valueOffset >>> (4 - fieldTypeLength) * 8;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = valueOffset;\n\t\t\t\t}\n\t\n\t\t\t\tfieldValues.push(value);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < typeCount; i++) {\n\t\t\t\t\tvar indexOffset = fieldTypeLength * i;\n\t\n\t\t\t\t\tif (fieldTypeLength >= 8) {\n\t\t\t\t\t\tif (['RATIONAL', 'SRATIONAL'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\t\t\t\t// Numerator\n\t\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset));\n\t\t\t\t\t\t\t// Denominator\n\t\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset + 4));\n\t\t\t\t\t\t} else if (['DOUBLE'].indexOf(fieldTypeName) !== -1) {\n\t\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset) + this.getBytes(4, valueOffset + indexOffset + 4));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(fieldTypeName, typeCount, fieldValueSize);\n\t\t\t\t\t\t\tthrow TypeError(\"Can't handle this field type or size\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfieldValues.push(this.getBytes(fieldTypeLength, valueOffset + indexOffset));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (fieldTypeName === 'ASCII') {\n\t\t\t\tfieldValues.forEach(function (e, i, a) {\n\t\t\t\t\ta[i] = String.fromCharCode(e);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\treturn fieldValues;\n\t\t},\n\t\n\t\tclampColorSample: function clampColorSample(colorSample, bitsPerSample) {\n\t\t\tvar multiplier = Math.pow(2, 8 - bitsPerSample);\n\t\n\t\t\treturn Math.floor(colorSample * multiplier + (multiplier - 1));\n\t\t},\n\t\n\t\tmakeRGBAFillValue: function makeRGBAFillValue(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1.0;\n\t\t\t}\n\t\t\treturn \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\n\t\t},\n\t\n\t\tparseFileDirectory: function parseFileDirectory(byteOffset) {\n\t\t\tvar numDirEntries = this.getBytes(2, byteOffset);\n\t\n\t\t\tvar tiffFields = [];\n\t\n\t\t\tfor (var i = byteOffset + 2, entryCount = 0; entryCount < numDirEntries; i += 12, entryCount++) {\n\t\t\t\tvar fieldTag = this.getBytes(2, i);\n\t\t\t\tvar fieldType = this.getBytes(2, i + 2);\n\t\t\t\tvar typeCount = this.getBytes(4, i + 4);\n\t\t\t\tvar valueOffset = this.getBytes(4, i + 8);\n\t\n\t\t\t\tvar fieldTagName = this.getFieldTagName(fieldTag);\n\t\t\t\tvar fieldTypeName = this.getFieldTypeName(fieldType);\n\t\n\t\t\t\tvar fieldValues = this.getFieldValues(fieldTagName, fieldTypeName, typeCount, valueOffset);\n\t\n\t\t\t\ttiffFields[fieldTagName] = { 'type': fieldTypeName, 'values': fieldValues };\n\t\t\t}\n\t\n\t\t\tthis.fileDirectories.push(tiffFields);\n\t\n\t\t\tvar nextIFDByteOffset = this.getBytes(4, i);\n\t\n\t\t\tif (nextIFDByteOffset === 0x00000000) {\n\t\t\t\treturn this.fileDirectories;\n\t\t\t} else {\n\t\t\t\treturn this.parseFileDirectory(nextIFDByteOffset);\n\t\t\t}\n\t\t},\n\t\n\t\tparseTIFF: function parseTIFF(tiffArrayBuffer, canvas) {\n\t\t\tcanvas = canvas || document.createElement('canvas');\n\t\n\t\t\tthis.tiffDataView = new DataView(tiffArrayBuffer);\n\t\t\tthis.canvas = canvas;\n\t\n\t\t\tthis.littleEndian = this.isLittleEndian(this.tiffDataView);\n\t\n\t\t\tif (!this.hasTowel(this.tiffDataView, this.littleEndian)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar firstIFDByteOffset = this.getBytes(4, 4);\n\t\n\t\t\tthis.fileDirectories = this.parseFileDirectory(firstIFDByteOffset);\n\t\n\t\t\tvar fileDirectory = this.fileDirectories[0];\n\t\n\t\t\t//console.log( fileDirectory );\n\t\n\t\t\tvar imageWidth = fileDirectory.ImageWidth.values[0];\n\t\t\tvar imageLength = fileDirectory.ImageLength.values[0];\n\t\n\t\t\tthis.canvas.width = imageWidth;\n\t\t\tthis.canvas.height = imageLength;\n\t\n\t\t\tvar strips = [];\n\t\n\t\t\tvar compression = fileDirectory.Compression ? fileDirectory.Compression.values[0] : 1;\n\t\n\t\t\tvar samplesPerPixel = fileDirectory.SamplesPerPixel.values[0];\n\t\n\t\t\tvar sampleProperties = [];\n\t\n\t\t\tvar bitsPerPixel = 0;\n\t\t\tvar hasBytesPerPixel = false;\n\t\n\t\t\tfileDirectory.BitsPerSample.values.forEach(function (bitsPerSample, i, bitsPerSampleValues) {\n\t\t\t\tsampleProperties[i] = {\n\t\t\t\t\t'bitsPerSample': bitsPerSample,\n\t\t\t\t\t'hasBytesPerSample': false,\n\t\t\t\t\t'bytesPerSample': undefined\n\t\t\t\t};\n\t\n\t\t\t\tif (bitsPerSample % 8 === 0) {\n\t\t\t\t\tsampleProperties[i].hasBytesPerSample = true;\n\t\t\t\t\tsampleProperties[i].bytesPerSample = bitsPerSample / 8;\n\t\t\t\t}\n\t\n\t\t\t\tbitsPerPixel += bitsPerSample;\n\t\t\t}, this);\n\t\n\t\t\tif (bitsPerPixel % 8 === 0) {\n\t\t\t\thasBytesPerPixel = true;\n\t\t\t\tvar bytesPerPixel = bitsPerPixel / 8;\n\t\t\t}\n\t\n\t\t\tvar stripOffsetValues = fileDirectory.StripOffsets.values;\n\t\t\tvar numStripOffsetValues = stripOffsetValues.length;\n\t\n\t\t\t// StripByteCounts is supposed to be required, but see if we can recover anyway.\n\t\t\tif (fileDirectory.StripByteCounts) {\n\t\t\t\tvar stripByteCountValues = fileDirectory.StripByteCounts.values;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Missing StripByteCounts!\");\n\t\n\t\t\t\t// Infer StripByteCounts, if possible.\n\t\t\t\tif (numStripOffsetValues === 1) {\n\t\t\t\t\tvar stripByteCountValues = [Math.ceil(imageWidth * imageLength * bitsPerPixel / 8)];\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error(\"Cannot recover from missing StripByteCounts\");\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Loop through strips and decompress as necessary.\n\t\t\tfor (var i = 0; i < numStripOffsetValues; i++) {\n\t\t\t\tvar stripOffset = stripOffsetValues[i];\n\t\t\t\tstrips[i] = [];\n\t\n\t\t\t\tvar stripByteCount = stripByteCountValues[i];\n\t\n\t\t\t\t// Loop through pixels.\n\t\t\t\tfor (var byteOffset = 0, bitOffset = 0, jIncrement = 1, getHeader = true, pixel = [], numBytes = 0, sample = 0, currentSample = 0; byteOffset < stripByteCount; byteOffset += jIncrement) {\n\t\t\t\t\t// Decompress strip.\n\t\t\t\t\tswitch (compression) {\n\t\t\t\t\t\t// Uncompressed\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t// Loop through samples (sub-pixels).\n\t\t\t\t\t\t\tfor (var m = 0, pixel = []; m < samplesPerPixel; m++) {\n\t\t\t\t\t\t\t\tif (sampleProperties[m].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t\t// XXX: This is wrong!\n\t\t\t\t\t\t\t\t\tvar sampleOffset = sampleProperties[m].bytesPerSample * m;\n\t\n\t\t\t\t\t\t\t\t\t//pixel.push(this.getBytes(sampleProperties[m].bytesPerSample, stripOffset + byteOffset + sampleOffset));\n\t\t\t\t\t\t\t\t\tpixel.push(this.tiffDataView.getFloat32(stripOffset + byteOffset + sampleOffset, this.littleEndian));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar sampleInfo = this.getBits(sampleProperties[m].bitsPerSample, stripOffset + byteOffset, bitOffset);\n\t\n\t\t\t\t\t\t\t\t\tpixel.push(sampleInfo.bits);\n\t\n\t\t\t\t\t\t\t\t\tbyteOffset = sampleInfo.byteOffset - stripOffset;\n\t\t\t\t\t\t\t\t\tbitOffset = sampleInfo.bitOffset;\n\t\n\t\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tstrips[i].push(pixel);\n\t\n\t\t\t\t\t\t\tif (hasBytesPerPixel) {\n\t\t\t\t\t\t\t\tjIncrement = bytesPerPixel;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjIncrement = 0;\n\t\n\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per pixel\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// CITT Group 3 1-Dimensional Modified Huffman run-length encoding\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// Group 3 Fax\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// Group 4 Fax\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// LZW\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// Old-style JPEG (TIFF 6.0)\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// New-style JPEG (TIFF Specification Supplement 2)\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\t// XXX: Use PDF.js code?\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// PackBits\n\t\t\t\t\t\tcase 32773:\n\t\t\t\t\t\t\t// Are we ready for a new block?\n\t\t\t\t\t\t\tif (getHeader) {\n\t\t\t\t\t\t\t\tgetHeader = false;\n\t\n\t\t\t\t\t\t\t\tvar blockLength = 1;\n\t\t\t\t\t\t\t\tvar iterations = 1;\n\t\n\t\t\t\t\t\t\t\t// The header byte is signed.\n\t\t\t\t\t\t\t\tvar header = this.tiffDataView.getInt8(stripOffset + byteOffset, this.littleEndian);\n\t\n\t\t\t\t\t\t\t\tif (header >= 0 && header <= 127) {\n\t\t\t\t\t\t\t\t\t// Normal pixels.\n\t\t\t\t\t\t\t\t\tblockLength = header + 1;\n\t\t\t\t\t\t\t\t} else if (header >= -127 && header <= -1) {\n\t\t\t\t\t\t\t\t\t// Collapsed pixels.\n\t\t\t\t\t\t\t\t\titerations = -header + 1;\n\t\t\t\t\t\t\t\t} else /*if (header === -128)*/{\n\t\t\t\t\t\t\t\t\t\t// Placeholder byte?\n\t\t\t\t\t\t\t\t\t\tgetHeader = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar currentByte = this.getBytes(1, stripOffset + byteOffset);\n\t\n\t\t\t\t\t\t\t\t// Duplicate bytes, if necessary.\n\t\t\t\t\t\t\t\tfor (var m = 0; m < iterations; m++) {\n\t\t\t\t\t\t\t\t\tif (sampleProperties[sample].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t\t\t// We're reading one byte at a time, so we need to handle multi-byte samples.\n\t\t\t\t\t\t\t\t\t\tcurrentSample = currentSample << 8 * numBytes | currentByte;\n\t\t\t\t\t\t\t\t\t\tnumBytes++;\n\t\n\t\t\t\t\t\t\t\t\t\t// Is our sample complete?\n\t\t\t\t\t\t\t\t\t\tif (numBytes === sampleProperties[sample].bytesPerSample) {\n\t\t\t\t\t\t\t\t\t\t\tpixel.push(currentSample);\n\t\t\t\t\t\t\t\t\t\t\tcurrentSample = numBytes = 0;\n\t\t\t\t\t\t\t\t\t\t\tsample++;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t// Is our pixel complete?\n\t\t\t\t\t\t\t\t\tif (sample === samplesPerPixel) {\n\t\t\t\t\t\t\t\t\t\tstrips[i].push(pixel);\n\t\n\t\t\t\t\t\t\t\t\t\tpixel = [];\n\t\t\t\t\t\t\t\t\t\tsample = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tblockLength--;\n\t\n\t\t\t\t\t\t\t\t// Is our block complete?\n\t\t\t\t\t\t\t\tif (blockLength === 0) {\n\t\t\t\t\t\t\t\t\tgetHeader = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tjIncrement = 1;\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t// Unknown compression algorithm\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// Do not attempt to parse the image data.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t//\t\t\tconsole.log( strips[i] );\n\t\t\t}\n\t\n\t\t\t//console.log( strips );\n\t\t\treturn strips;\n\t\n\t\t\tif (canvas.getContext) {\n\t\t\t\tvar ctx = this.canvas.getContext(\"2d\");\n\t\n\t\t\t\t// Set a default fill style.\n\t\t\t\tctx.fillStyle = this.makeRGBAFillValue(255, 255, 255, 0);\n\t\n\t\t\t\t// If RowsPerStrip is missing, the whole image is in one strip.\n\t\t\t\tif (fileDirectory.RowsPerStrip) {\n\t\t\t\t\tvar rowsPerStrip = fileDirectory.RowsPerStrip.values[0];\n\t\t\t\t} else {\n\t\t\t\t\tvar rowsPerStrip = imageLength;\n\t\t\t\t}\n\t\n\t\t\t\tvar numStrips = strips.length;\n\t\n\t\t\t\tvar imageLengthModRowsPerStrip = imageLength % rowsPerStrip;\n\t\t\t\tvar rowsInLastStrip = imageLengthModRowsPerStrip === 0 ? rowsPerStrip : imageLengthModRowsPerStrip;\n\t\n\t\t\t\tvar numRowsInStrip = rowsPerStrip;\n\t\t\t\tvar numRowsInPreviousStrip = 0;\n\t\n\t\t\t\tvar photometricInterpretation = fileDirectory.PhotometricInterpretation.values[0];\n\t\n\t\t\t\tvar extraSamplesValues = [];\n\t\t\t\tvar numExtraSamples = 0;\n\t\n\t\t\t\tif (fileDirectory.ExtraSamples) {\n\t\t\t\t\textraSamplesValues = fileDirectory.ExtraSamples.values;\n\t\t\t\t\tnumExtraSamples = extraSamplesValues.length;\n\t\t\t\t}\n\t\n\t\t\t\tif (fileDirectory.ColorMap) {\n\t\t\t\t\tvar colorMapValues = fileDirectory.ColorMap.values;\n\t\t\t\t\tvar colorMapSampleSize = Math.pow(2, sampleProperties[0].bitsPerSample);\n\t\t\t\t}\n\t\n\t\t\t\t// Loop through the strips in the image.\n\t\t\t\tfor (var i = 0; i < numStrips; i++) {\n\t\t\t\t\t// The last strip may be short.\n\t\t\t\t\tif (i + 1 === numStrips) {\n\t\t\t\t\t\tnumRowsInStrip = rowsInLastStrip;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar numPixels = strips[i].length;\n\t\t\t\t\tvar yPadding = numRowsInPreviousStrip * i;\n\t\n\t\t\t\t\t// Loop through the rows in the strip.\n\t\t\t\t\tfor (var y = 0, j = 0; y < numRowsInStrip, j < numPixels; y++) {\n\t\t\t\t\t\t// Loop through the pixels in the row.\n\t\t\t\t\t\tfor (var x = 0; x < imageWidth; x++, j++) {\n\t\t\t\t\t\t\tvar pixelSamples = strips[i][j];\n\t\n\t\t\t\t\t\t\tvar red = 0;\n\t\t\t\t\t\t\tvar green = 0;\n\t\t\t\t\t\t\tvar blue = 0;\n\t\t\t\t\t\t\tvar opacity = 1.0;\n\t\n\t\t\t\t\t\t\tif (numExtraSamples > 0) {\n\t\t\t\t\t\t\t\tfor (var k = 0; k < numExtraSamples; k++) {\n\t\t\t\t\t\t\t\t\tif (extraSamplesValues[k] === 1 || extraSamplesValues[k] === 2) {\n\t\t\t\t\t\t\t\t\t\t// Clamp opacity to the range [0,1].\n\t\t\t\t\t\t\t\t\t\topacity = pixelSamples[3 + k] / 256;\n\t\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tswitch (photometricInterpretation) {\n\t\t\t\t\t\t\t\t// Bilevel or Grayscale\n\t\t\t\t\t\t\t\t// WhiteIsZero\n\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\tif (sampleProperties[0].hasBytesPerSample) {\n\t\t\t\t\t\t\t\t\t\tvar invertValue = Math.pow(0x10, sampleProperties[0].bytesPerSample * 2);\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t// Invert samples.\n\t\t\t\t\t\t\t\t\tpixelSamples.forEach(function (sample, index, samples) {\n\t\t\t\t\t\t\t\t\t\tsamples[index] = invertValue - sample;\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t// Bilevel or Grayscale\n\t\t\t\t\t\t\t\t// BlackIsZero\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tred = green = blue = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// RGB Full Color\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tred = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\n\t\t\t\t\t\t\t\t\tgreen = this.clampColorSample(pixelSamples[1], sampleProperties[1].bitsPerSample);\n\t\t\t\t\t\t\t\t\tblue = this.clampColorSample(pixelSamples[2], sampleProperties[2].bitsPerSample);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// RGB Color Palette\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (colorMapValues === undefined) {\n\t\t\t\t\t\t\t\t\t\tthrow Error(\"Palette image missing color map\");\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tvar colorMapIndex = pixelSamples[0];\n\t\n\t\t\t\t\t\t\t\t\tred = this.clampColorSample(colorMapValues[colorMapIndex], 16);\n\t\t\t\t\t\t\t\t\tgreen = this.clampColorSample(colorMapValues[colorMapSampleSize + colorMapIndex], 16);\n\t\t\t\t\t\t\t\t\tblue = this.clampColorSample(colorMapValues[2 * colorMapSampleSize + colorMapIndex], 16);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// Transparency mask\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tthrow RangeError('Not Yet Implemented: Transparency mask');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// CMYK\n\t\t\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t\t\tthrow RangeError('Not Yet Implemented: CMYK');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// YCbCr\n\t\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\t\tthrow RangeError('Not Yet Implemented: YCbCr');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// CIELab\n\t\t\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t\t\tthrow RangeError('Not Yet Implemented: CIELab');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\t// Unknown Photometric Interpretation\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow RangeError('Unknown Photometric Interpretation:', photometricInterpretation);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tctx.fillStyle = this.makeRGBAFillValue(red, green, blue, opacity);\n\t\t\t\t\t\t\tctx.fillRect(x, yPadding + y, 1, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tnumRowsInPreviousStrip = numRowsInStrip;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/*\t\tfor (var i = 0, numFileDirectories = this.fileDirectories.length; i < numFileDirectories; i++) {\r\n\t  \t\t\t// Stuff\r\n\t  \t\t}*/\n\t\n\t\t\treturn this.canvas;\n\t\t}\n\t};\n\t\n\texports.default = TIFFParser;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = createQueryString;\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction createQueryString(params) {\n\t    return _.map(params, function (value, key) {\n\t        return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n\t    }).join('&');\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar events = function events() {\n\t\n\t    var observers = {};\n\t\n\t    return {\n\t        on: function on(event, callback, context) {\n\t            if (!observers[event]) {\n\t                observers[event] = [];\n\t            }\n\t            if (context) {\n\t                callback = callback.bind(context);\n\t            }\n\t            observers[event].push(callback);\n\t        },\n\t        fire: function fire(event, data) {\n\t            if (observers[event]) {\n\t                _.each(observers[event], function (observer) {\n\t                    observer(event, data);\n\t                });\n\t            }\n\t        }\n\t    };\n\t};\n\t\n\texports.default = events;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _clampLineString = __webpack_require__(9);\n\t\n\tvar _clampLineString2 = _interopRequireDefault(_clampLineString);\n\t\n\tvar _transform = __webpack_require__(12);\n\t\n\tvar _transform2 = _interopRequireDefault(_transform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction ALine(lineGeom, style, geometry, envelope) {\n\t\n\t    var styleDefaults = {\n\t        color: 0x0000ff,\n\t        linewidth: 5\n\t    };\n\t\n\t    style = _.extend({}, styleDefaults, style || {});\n\t\n\t    var needsClamp = true;\n\t    var line;\n\t\n\t    function _createLine(points, color) {\n\t        var vertices = _.map(points, function (point) {\n\t            return new _three.Vector3(point.x, point.y, point.z);\n\t        });\n\t\n\t        var material = new _three.LineBasicMaterial(style);\n\t        var geometry = new _three.Geometry();\n\t        geometry.vertices = vertices;\n\t        return new _three.Line(geometry, material);\n\t    }\n\t\n\t    function getThreeLine() {\n\t\n\t        if (line) {\n\t            return line;\n\t        }\n\t\n\t        if (lineGeom.type !== 'LineString') {\n\t            throw new Error('Expected GeoJSON LineString geometry');\n\t        }\n\t\n\t        //get envelope stuff\n\t        var coordMinX = envelope.minX();\n\t        var coordMinY = envelope.minY();\n\t\n\t        //get the bbox of the geometry\n\t        geometry.computeBoundingBox();\n\t        var bbox = geometry.boundingBox;\n\t\n\t        var pixelMinX = bbox.min.x;\n\t        var pixelMinY = bbox.min.y;\n\t        var pixelWidth = Math.abs(bbox.max.x - pixelMinX);\n\t        var pixelHeight = Math.abs(bbox.max.y - pixelMinY);\n\t\n\t        var xFactor = envelope.width() / pixelWidth;\n\t        var yFactor = envelope.height() / pixelHeight;\n\t\n\t        var linedata = _.map(lineGeom.coordinates, function (coord) {\n\t            return (0, _transform2.default)(coord, 'EPSG:4326', envelope.mapCrs);\n\t        });\n\t\n\t        var points = _.map(linedata, function (coord) {\n\t            var x = coord[0];\n\t            var pixelX = pixelMinX + (x - coordMinX) / xFactor;\n\t            var y = coord[1];\n\t            var pixelY = pixelMinY + (y - coordMinY) / yFactor;\n\t            return { x: pixelX, y: pixelY, z: 0 };\n\t        });\n\t\n\t        if (geometry.loaded) {\n\t            points = (0, _clampLineString2.default)(points, geometry);\n\t        }\n\t        line = _createLine(points);\n\t\n\t        if (geometry.loaded) {\n\t            needsClamp = false;\n\t        }\n\t        return line;\n\t    };\n\t\n\t    function clamp() {\n\t        line = _createLine((0, _clampLineString2.default)(line.geometry.vertices, geometry));\n\t        return line;\n\t    }\n\t\n\t    return {\n\t        getThreeLine: getThreeLine,\n\t        clamp: clamp,\n\t        needsClamp: function needsClamp() {\n\t            return needsClamp;\n\t        }\n\t    };\n\t}\n\t\n\texports.default = ALine;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _checkIntersect = __webpack_require__(10);\n\t\n\tvar _checkIntersect2 = _interopRequireDefault(_checkIntersect);\n\t\n\tvar _lineIntersect = __webpack_require__(11);\n\t\n\tvar _lineIntersect2 = _interopRequireDefault(_lineIntersect);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction calcZ(p1, p2, p3, x, y) {\n\t    var det = (p2.y - p3.y) * (p1.x - p3.x) + (p3.x - p2.x) * (p1.y - p3.y);\n\t    var l1 = ((p2.y - p3.y) * (x - p3.x) + (p3.x - p2.x) * (y - p3.y)) / det;\n\t    var l2 = ((p3.y - p1.y) * (x - p3.x) + (p1.x - p3.x) * (y - p3.y)) / det;\n\t    var l3 = 1.0 - l1 - l2;\n\t    return l1 * p1.z + l2 * p2.z + l3 * p3.z;\n\t}\n\t\n\tfunction getDistance(a, b) {\n\t    return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\t}\n\t\n\tfunction clampLineSegment(l, geometry) {\n\t    return _.chain(geometry.faces).map(function (face) {\n\t        var a = geometry.vertices[face.a];\n\t        var b = geometry.vertices[face.b];\n\t        var c = geometry.vertices[face.c];\n\t\n\t        var line1 = [a, b];\n\t        var line2 = [b, c];\n\t        var line3 = [c, a];\n\t\n\t        var ints = [];\n\t        if ((0, _checkIntersect2.default)(l, line1)) {\n\t            ints.push((0, _lineIntersect2.default)(line1, l));\n\t        }\n\t        if ((0, _checkIntersect2.default)(l, line2)) {\n\t            ints.push((0, _lineIntersect2.default)(line2, l));\n\t        }\n\t        if ((0, _checkIntersect2.default)(l, line3)) {\n\t            ints.push((0, _lineIntersect2.default)(line3, l));\n\t        }\n\t        return _.map(ints, function (intersect) {\n\t            var z = calcZ(a, b, c, intersect.x, intersect.y);\n\t            return {\n\t                x: intersect.x,\n\t                y: intersect.y,\n\t                z: z + 0.01,\n\t                dist: getDistance(l[0], intersect)\n\t            };\n\t        });\n\t    }).flatten().sortBy(function (p) {\n\t        return Math.abs(p.dist);\n\t    }).value();\n\t}\n\t\n\tfunction clampLineString(line, geometry) {\n\t    var p = _.map(_.range(0, line.length - 1), function (i) {\n\t        var a = line[i];\n\t        var b = line[i + 1];\n\t        return clampLineSegment([a, b], geometry);\n\t    });\n\t    return _.flatten(p);\n\t}\n\t\n\texports.default = clampLineString;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// Given three colinear points p, q, r, the function checks if\n\t// point q lies on line segment 'pr'\n\tfunction onSegment(p, q, r) {\n\t    if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) {\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t// To find orientation of ordered triplet (p, q, r).\n\t// The function returns following values\n\t// 0 --> p, q and r are colinear\n\t// 1 --> Clockwise\n\t// 2 --> Counterclockwise\n\tfunction orientation(p, q, r) {\n\t    // See http://www.geeksforgeeks.org/orientation-3-ordered-points/\n\t    // for details of below formula.\n\t    var val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t\n\t    if (val === 0) {\n\t        return 0; // colinear\n\t    }\n\t    return val > 0 ? 1 : 2; // clock or counterclock wise\n\t}\n\t\n\t// The main function that returns true if line segment 'p1q1'\n\t// and 'p2q2' intersect.\n\tfunction checkIntersect2(l1, l2) {\n\t\n\t    var p1 = l1[0];\n\t    var p2 = l1[1];\n\t\n\t    var q1 = l2[0];\n\t    var q2 = l2[1];\n\t\n\t    // Find the four orientations needed for general and\n\t    // special cases\n\t    var o1 = orientation(p1, q1, p2);\n\t    var o2 = orientation(p1, q1, q2);\n\t    var o3 = orientation(p2, q2, p1);\n\t    var o4 = orientation(p2, q2, q1);\n\t    // General case\n\t    if (o1 !== o2 && o3 !== o4) {\n\t        return true;\n\t    }\n\t\n\t    // Special Cases\n\t    // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n\t    if (o1 === 0 && onSegment(p1, p2, q1)) {\n\t        return true;\n\t    };\n\t\n\t    // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n\t    if (o2 === 0 && onSegment(p1, q2, q1)) {\n\t        return true;\n\t    }\n\t\n\t    // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n\t    if (o3 === 0 && onSegment(p2, p1, q2)) {\n\t        return true;\n\t    }\n\t    // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n\t    if (o4 === 0 && onSegment(p2, q1, q2)) {\n\t        return true;\n\t    }\n\t\n\t    return false; // Doesn't fall in any of the above cases\n\t}\n\t\n\tfunction Turn(p1, p2, p3) {\n\t    var a = p1.x;\n\t    var b = p1.y;\n\t    var c = p2.x;\n\t    var d = p2.y;\n\t    var e = p3.x;\n\t    var f = p3.y;\n\t    var A = (f - b) * (c - a);\n\t    var B = (d - b) * (e - a);\n\t    return A > B + Number.EPSILON ? 1 : A + Number.EPSILON < B ? -1 : 0;\n\t}\n\t\n\tfunction checkIntersect(l1, l2) {\n\t    var p1 = l1[0];\n\t    var p2 = l1[1];\n\t    var p3 = l2[0];\n\t    var p4 = l2[1];\n\t    return Turn(p1, p3, p4) !== Turn(p2, p3, p4) && Turn(p1, p2, p3) !== Turn(p1, p2, p4);\n\t}\n\t\n\texports.default = checkIntersect;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = lineIntersect;\n\tfunction lineIntersect(l1, l2) {\n\t    var x1 = l1[0].x;\n\t    var y1 = l1[0].y;\n\t\n\t    var x2 = l1[1].x;\n\t    var y2 = l1[1].y;\n\t\n\t    var x3 = l2[0].x;\n\t    var y3 = l2[0].y;\n\t\n\t    var x4 = l2[1].x;\n\t    var y4 = l2[1].y;\n\t    var ua,\n\t        ub,\n\t        denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\t    if (denom === 0) {\n\t        return null;\n\t    }\n\t    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\n\t    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\n\t    return {\n\t        x: x1 + ua * (x2 - x1),\n\t        y: y1 + ua * (y2 - y1),\n\t        z: 0\n\t    };\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = transform;\n\t\n\tvar _index = __webpack_require__(13);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_index2.default.defs('EPSG:32632', '+title=EPSG Projection 32632 - WGS 84 / UTM zone 32N +proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\n\t_index2.default.defs('EPSG:32633', '+title=EPSG Projection 32633 - WGS 84 / UTM zone 33N +proj=utm +zone=33 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\n\t\n\tfunction transform(coord, from, to) {\n\t    return (0, _index2.default)(from, to, coord);\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = proj4;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _createQueryString = __webpack_require__(6);\n\t\n\tvar _createQueryString2 = _interopRequireDefault(_createQueryString);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Texture(textureConfig, dim) {\n\t\n\t    function _getImageMap() {\n\t        var imageCall;\n\t        if (textureConfig.imgUrl) {\n\t            //IMAGE\n\t            return textureConfig.imgUrl;\n\t        }\n\t        var params = {\n\t            service: 'wms',\n\t            version: '1.3.0',\n\t            request: 'getMap',\n\t            crs: dim.crs,\n\t            WIDTH: dim.imgWidth,\n\t            HEIGHT: dim.imgHeight,\n\t            bbox: dim.envelope.bbox(),\n\t            layers: textureConfig.wmsLayers,\n\t            format: textureConfig.wmsFormat + textureConfig.wmsFormatMode\n\t        };\n\t        return textureConfig.wmsUrl + '?' + (0, _createQueryString2.default)(params);\n\t    };\n\t\n\t    function loadTexture(material, callback) {\n\t        var loader = new _three.TextureLoader(),\n\t            image = _getImageMap();\n\t        // load a resource\n\t        loader.load(image, function (texture) {\n\t            //Texture is probably not the power of two.\n\t            //Avoid warning: Apply THREE.LinearFilter or THREE.NearestFilter\n\t            texture.minFilter = _three.LinearFilter;\n\t            material.map = texture;\n\t            material.needsUpdate = true;\n\t            if (callback) {\n\t                callback(texture);\n\t            }\n\t        },\n\t        // Function called when download progresses\n\t        function (xhr) {},\n\t        // Function called when download errors\n\t        function (xhr) {\n\t            console.log('An error happened on texture load: ' + image);\n\t        });\n\t    };\n\t    return {\n\t        loadTexture: loadTexture\n\t    };\n\t}\n\t\n\texports.default = Texture;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _tiff = __webpack_require__(5);\n\t\n\tvar _tiff2 = _interopRequireDefault(_tiff);\n\t\n\tvar _createQueryString = __webpack_require__(6);\n\t\n\tvar _createQueryString2 = _interopRequireDefault(_createQueryString);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar Terrain = function Terrain(terrainConfig, dim) {\n\t\n\t    var isTiff = terrainConfig.format === 'geotiff';\n\t    var geometry;\n\t    var _minHeight, _midHeight;\n\t\n\t    function _getTiffHeights(xhr) {\n\t        var tiffParser = new _tiff2.default();\n\t        var tiffArray = tiffParser.parseTIFF(xhr.response);\n\t        var i = -1;\n\t        var heights = [];\n\t        for (var j = 0; j < tiffArray.length; j++) {\n\t            for (var k = 0; k < tiffArray[j].length; k++) {\n\t                heights.push(parseInt(tiffArray[j][k][0], 10));\n\t            }\n\t        }\n\t        return heights;\n\t    }\n\t\n\t    function _getXYZHeights(xhr) {\n\t        var numVertices = geometry.vertices.length;\n\t        var lines = xhr.responseText.split('\\n');\n\t        var heights = [];\n\t        for (var i = 0, l = numVertices; i < l; i++) {\n\t            heights[i] = parseInt(lines[i].split(' ')[2], 10);\n\t        }\n\t        return heights;\n\t    }\n\t\n\t    function _parseHeights(xhr) {\n\t\n\t        var heights = isTiff ? _getTiffHeights(xhr) : _getXYZHeights(xhr);\n\t\n\t        var minHeight = _.min(heights);\n\t        var maxHeight = _.max(heights);\n\t\n\t        //The Vertical center of the height model is adjusted to (min + max) / 2.\n\t        //If the map covers an area of high altitudes (i.e. Galdhøpiggen) above sea level,\n\t        //a tipping of the model will cause the map to disappear over the screen top without this\n\t        //adjustment.\n\t        //On a computer you can move the model down width a right-click-drag,\n\t        //but not on a mobile device.\n\t        var midHeight = (maxHeight + minHeight) / 2;\n\t\n\t        return {\n\t            height: heights,\n\t            midHeight: midHeight,\n\t            minHeight: (minHeight - midHeight) / dim.zMult\n\t        };\n\t    };\n\t\n\t    function _createGeometry() {\n\t        geometry = new _three.PlaneGeometry(dim.demWidth, dim.demHeight, dim.demWidth - 1, dim.demHeight - 1);\n\t    };\n\t\n\t    function _terrainLoaded(data) {\n\t        for (var i = 0, l = geometry.vertices.length; i < l; i++) {\n\t            geometry.vertices[i].z = (data.height[i] - data.midHeight) / dim.zMult;\n\t        }\n\t        geometry.loaded = true;\n\t        geometry.verticesNeedUpdate = true;\n\t        _minHeight = data.minHeight;\n\t        _midHeight = data.midHeight;\n\t    }\n\t\n\t    function loadTerrain(callback) {\n\t        var demRequest = new XMLHttpRequest();\n\t\n\t        var params = {\n\t            SERVICE: 'WCS',\n\t            VERSION: '1.0.0',\n\t            REQUEST: 'GetCoverage',\n\t            COVERAGE: terrainConfig.coverage,\n\t            FORMAT: terrainConfig.format,\n\t            bbox: dim.envelope.bbox(),\n\t            CRS: dim.crs,\n\t            RESPONSE_CRS: dim.crs,\n\t            WIDTH: dim.demWidth,\n\t            HEIGHT: dim.demHeight\n\t        };\n\t\n\t        var wcsCall = terrainConfig.wcsUrl + '?' + (0, _createQueryString2.default)(params);\n\t        if (isTiff) {\n\t            demRequest.responseType = 'arraybuffer';\n\t        }\n\t        demRequest.open('GET', wcsCall, true);\n\t        demRequest.onreadystatechange = function () {\n\t            if (this.readyState === 4) {\n\t                _terrainLoaded(_parseHeights(this));\n\t                callback();\n\t            }\n\t        };\n\t        demRequest.send();\n\t    };\n\t\n\t    function _createSideMesh(filter) {\n\t        var points = _.chain(geometry.vertices).filter(filter).map(function (vertex) {\n\t            return [new _three.Vector3(vertex.x, vertex.y, vertex.z), new _three.Vector3(vertex.x, vertex.y, _minHeight)];\n\t        }).flatten().value();\n\t        var first = _.first(points).clone();\n\t        var last = _.last(points).clone();\n\t        first.z = _minHeight;\n\t        last.z = _minHeight;\n\t\n\t        var sideGeometry = new _three.Geometry();\n\t        points.unshift(first);\n\t        points.push(last);\n\t\n\t        var faces = _.map(_.range(1, points.length - 1), function (i) {\n\t            return new _three.Face3(i - 1, i, i + 1);\n\t        });\n\t\n\t        sideGeometry.vertices = points;\n\t        sideGeometry.faces = faces;\n\t        return new _three.Mesh(sideGeometry, new _three.MeshBasicMaterial({\n\t            side: _three.DoubleSide,\n\t            color: terrainConfig.boxColor,\n\t            wireframe: false\n\t        }));\n\t    }\n\t\n\t    function getSides() {\n\t        if (!terrainConfig.showBox) {\n\t            return null;\n\t        }\n\t        var material = new _three.MeshBasicMaterial({\n\t            wireframe: false,\n\t            color: terrainConfig.boxColor,\n\t            side: _three.BackSide\n\t        });\n\t\n\t        var backGeom = new _three.PlaneGeometry(dim.demWidth, dim.demHeight, dim.demWidth - 1, dim.demHeight - 1);\n\t\n\t        for (var i = 0, l = backGeom.vertices.length; i < l; i++) {\n\t            backGeom.vertices[i].z = _minHeight;\n\t        }\n\t\n\t        var group = new _three.Group();\n\t        group.add(new _three.Mesh(backGeom, material));\n\t\n\t        geometry.computeBoundingBox();\n\t        var bbox = geometry.boundingBox;\n\t\n\t        var filterLeft = function filterLeft(vertex) {\n\t            return vertex.x === bbox.min.x;\n\t        };\n\t\n\t        var filterBottom = function filterBottom(vertex) {\n\t            return vertex.y === bbox.min.y;\n\t        };\n\t\n\t        var filterRight = function filterRight(vertex) {\n\t            return vertex.x === bbox.max.x;\n\t        };\n\t\n\t        var filterTop = function filterTop(vertex) {\n\t            return vertex.y === bbox.max.y;\n\t        };\n\t\n\t        group.add(_createSideMesh(filterBottom));\n\t        group.add(_createSideMesh(filterRight));\n\t        group.add(_createSideMesh(filterLeft));\n\t        group.add(_createSideMesh(filterTop));\n\t        return group;\n\t    }\n\t\n\t    _createGeometry();\n\t\n\t    return {\n\t        loadTerrain: loadTerrain,\n\t        getGeometry: function getGeometry() {\n\t            return geometry;\n\t        },\n\t        minHeight: function minHeight() {\n\t            return _minHeight;\n\t        },\n\t        midHeight: function midHeight() {\n\t            return _midHeight;\n\t        },\n\t        getSides: getSides,\n\t\n\t        showBox: terrainConfig.showBox\n\t    };\n\t};\n\t\n\texports.default = Terrain;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _three = __webpack_require__(3);\n\t\n\tvar _Texture = __webpack_require__(14);\n\t\n\tvar _Texture2 = _interopRequireDefault(_Texture);\n\t\n\tvar _transform = __webpack_require__(12);\n\t\n\tvar _transform2 = _interopRequireDefault(_transform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Profiles(profiles, terrain, dim) {\n\t\n\t    function _transformPoint(sSource, sDest, x, y) {\n\t        if (typeof x === 'string') {\n\t            x = 1.0 * x;\n\t            y = 1.0 * y;\n\t        }\n\t        return (0, _transform2.default)([x, y], sSource, sDest);\n\t    };\n\t\n\t    function _createProfile(profile, config) {\n\t        var verticalGeometry = new _three.PlaneGeometry(1, 1);\n\t        var verticalMaterial = new _three.MeshPhongMaterial({\n\t            side: _three.DoubleSide,\n\t            transparent: true\n\t        });\n\t        var crsSource = profile.CRS;\n\t\n\t        //Check and transform to another map projection\n\t\n\t        if (crsSource !== config.crsDestination) {\n\t            var pointStart = _transformPoint(crsSource, config.crsDestination, profile.xyStart.x, profile.xyStart.y),\n\t                pointEnd = _transformPoint(crsSource, config.crsDestination, profile.xyEnd.x, profile.xyEnd.y);\n\t            profile.xyStart.x = pointStart[0];\n\t            profile.xyStart.y = pointStart[1];\n\t            profile.xyEnd.x = pointEnd[0];\n\t            profile.xyEnd.y = pointEnd[1];\n\t        }\n\t\n\t        //Local transformation\n\t        var newStartX = config.kX * profile.xyStart.x - config.kX * dim.envelope.minX() - dim.demWidth / 2,\n\t            newStartY = config.kY * profile.xyStart.y - config.kY * dim.envelope.minY() - dim.demHeight / 2,\n\t            newEndX = config.kX * profile.xyEnd.x - config.kX * dim.envelope.minX() - dim.demWidth / 2,\n\t            newEndY = config.kY * profile.xyEnd.y - config.kY * dim.envelope.minY() - dim.demHeight / 2,\n\t            newStartZ = profile.zStart - terrain.midHeight(),\n\t            newEndZ = profile.zEnd - terrain.midHeight(),\n\t            verticalMesh = new _three.Mesh(verticalGeometry, verticalMaterial);\n\t\n\t        //XY\n\t        verticalMesh.geometry.vertices[0].x = newStartX;\n\t        verticalMesh.geometry.vertices[0].y = newStartY;\n\t        verticalMesh.geometry.vertices[1].x = newEndX;\n\t        verticalMesh.geometry.vertices[1].y = newEndY;\n\t        verticalMesh.geometry.vertices[2].x = newStartX;\n\t        verticalMesh.geometry.vertices[2].y = newStartY;\n\t        verticalMesh.geometry.vertices[3].x = newEndX;\n\t        verticalMesh.geometry.vertices[3].y = newEndY;\n\t\n\t        //Z\n\t        profile.zStart - terrain.midHeight();\n\t        verticalMesh.geometry.vertices[0].z = newStartZ / dim.zMult; //900/zMult;\n\t        verticalMesh.geometry.vertices[1].z = newStartZ / dim.zMult; //900/zMult;//\n\t        verticalMesh.geometry.vertices[2].z = newEndZ / dim.zMult; //-1406/zMult;\n\t        verticalMesh.geometry.vertices[3].z = newEndZ / dim.zMult; //-1406/zMult;\n\t\n\t\n\t        var texture = (0, _Texture2.default)({\n\t            type: 'image',\n\t            imgUrl: profile.imgUrl\n\t        }, null);\n\t        texture.loadTexture(verticalMaterial);\n\t\n\t        return verticalMesh;\n\t    }\n\t\n\t    function load(callback) {\n\t        //json response for profile metadata db query\n\t        var geometry = terrain.getGeometry();\n\t        var modelLL = geometry.vertices[geometry.vertices.length - dim.demWidth];\n\t        var modelUR = geometry.vertices[dim.demWidth - 1];\n\t        var data = {\n\t            crsDestination: dim.crs,\n\t            kX: (modelUR.x - modelLL.x) / dim.envelope.width(),\n\t            kY: (modelUR.y - modelLL.y) / dim.envelope.height()\n\t        };\n\t\n\t        var meshes = _.map(profiles, function (profile) {\n\t            return _createProfile(profile, data);\n\t        });\n\t\n\t        callback(meshes);\n\t    }\n\t\n\t    return {\n\t        load: load\n\t    };\n\t}\n\t\n\texports.default = Profiles;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = Envelope;\n\t\n\tvar _underscore = __webpack_require__(1);\n\t\n\tvar _ = _interopRequireWildcard(_underscore);\n\t\n\tvar _transform = __webpack_require__(12);\n\t\n\tvar _transform2 = _interopRequireDefault(_transform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Envelope(bbox, crs, bboxCrs) {\n\t    var bbox = _.map(bbox.split(','), parseFloat);\n\t    var ne = [bbox[0], bbox[1]];\n\t    var sw = [bbox[2], bbox[3]];\n\t    if (crs !== bboxCrs) {\n\t        ne = (0, _transform2.default)(ne, bboxCrs, crs);\n\t        sw = (0, _transform2.default)(sw, bboxCrs, crs);\n\t    }\n\t\n\t    var envelope = ne.concat(sw);\n\t\n\t    function width() {\n\t        return envelope[2] - envelope[0];\n\t    }\n\t\n\t    function height() {\n\t        return envelope[3] - envelope[1];\n\t    }\n\t\n\t    function getBbox() {\n\t        return envelope.join(',');\n\t    }\n\t\n\t    function minX() {\n\t        return envelope[0];\n\t    }\n\t\n\t    function minY() {\n\t        return envelope[1];\n\t    }\n\t\n\t    return {\n\t        width: width,\n\t        height: height,\n\t        bbox: getBbox,\n\t        minX: minX,\n\t        minY: minY,\n\t        mapCrs: crs\n\t    };\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** Wxs3Map.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 22e4c13182993163ee03\n **/","import * as _ from 'underscore';\r\n\r\nimport ThreeDMapUntiled from './ThreeDMapUntiled';\r\n\r\n\r\nimport Texture from './Texture';\r\nimport Terrain from './Terrain';\r\nimport Profiles from './Profiles';\r\nimport Envelope from './Envelope';\r\n\r\nvar defaults = {\r\n    div: null,\r\n    bbox: null,\r\n    bboxCrs: 'EPSG:4326',\r\n    wireframe: false,\r\n    zMult: 1,\r\n    zInv: false,\r\n    crs: 'EPSG:32633',\r\n    texture: {\r\n        type: 'wms',\r\n        wmsUrl: 'http://openwms.statkart.no/skwms1/wms.topo2',\r\n        wmsLayers: 'topo2_WMS',\r\n        wmsFormat: 'image/png',\r\n        wmsFormatMode: ''\r\n    },\r\n    terrain: {\r\n        pixelsPerVertex: 8, //the resolution of the height model in the image\r\n        wcsUrl: 'http://wms.geonorge.no/skwms1/wcs.dtm',\r\n        wcsResolution: 10, //resolution of grid cell in meters\r\n        coverage: 'land_utm33_10m',\r\n        format: 'geotiff',\r\n        showBox: true,\r\n        boxColor: 0xdddddd\r\n    },\r\n    profiles: null\r\n};\r\n\r\nfunction extendDefaults(config) {\r\n    var texture = _.extend({}, defaults.texture, config.texture || {});\r\n    var terrain = _.extend({}, defaults.terrain, config.terrain || {});\r\n    var confExtended = _.extend({}, defaults, config);\r\n    confExtended.texture = texture;\r\n    confExtended.terrain = terrain;\r\n    return confExtended;\r\n};\r\n\r\nfunction Dimensions(config) {\r\n\r\n    var div = document.getElementById(config.div);\r\n    var width = div.clientWidth;\r\n    var height = div.clientHeight;\r\n\r\n    var envelope = Envelope(config.bbox, config.crs, config.bboxCrs);\r\n\r\n    var metersWidth = envelope.width();\r\n    var metersHeight = envelope.height();\r\n\r\n    //Adjust output image to canvas if not specified\r\n    var imgWidth, imgHeight;\r\n    if (!config.texture.imgWidth || !config.texture.imgHeight) {\r\n        var imgCoefficient = metersWidth / metersHeight;\r\n        if ((width / height) < imgCoefficient) {\r\n            imgWidth = width;\r\n            imgHeight = Math.round(imgWidth / imgCoefficient);\r\n        } else {\r\n            imgHeight = height;\r\n            imgWidth = Math.round(imgHeight * imgCoefficient);\r\n        }\r\n    } else {\r\n        imgWidth = config.texture.imgWidth;\r\n        imgHeight = config.texture.imgHeight;\r\n    }\r\n\r\n    //Compute the resolution of the height model in the image (pixelsPerVertex)\r\n    var demWidth = Math.round(imgWidth / config.terrain.pixelsPerVertex);\r\n    var demHeight = Math.round(imgHeight / config.terrain.pixelsPerVertex);\r\n\r\n    if (demWidth > metersWidth / config.terrain.wcsResolution) {\r\n        //ajust to avoid stairs in the model - reduce dem to actual resolution\r\n        demWidth = Math.round(metersWidth / config.terrain.wcsResolution);\r\n        demHeight = Math.round(metersHeight / config.terrain.wcsResolution);\r\n    }\r\n\r\n    // mapunits between vertexes in x-dimention\r\n    var proportionWidth = metersWidth / demWidth;\r\n\r\n    // mapunits between vertexes in y-dimention\r\n    var proportionHeight = metersHeight / demHeight;\r\n\r\n    // average mapunits between vertexes\r\n    var proportionAverage = ((proportionWidth + proportionHeight) / 2);\r\n\r\n    if (config.zInv) {\r\n        proportionAverage = proportionAverage * -1;\r\n    }\r\n    var zMult;\r\n    if (config.zMult) {\r\n        zMult = proportionAverage / config.zMult;\r\n    } else {\r\n        zMult = proportionAverage;\r\n    }\r\n\r\n    return {\r\n        config: config,\r\n        div: div,\r\n        envelope: envelope,\r\n        width: width,\r\n        height: height,\r\n        imgWidth: imgWidth,\r\n        imgHeight: imgHeight,\r\n        demWidth: demWidth,\r\n        demHeight: demHeight,\r\n        zMult: zMult,\r\n        crs: config.crs\r\n    };\r\n}\r\n\r\nfunction Wxs3Map(config) {\r\n    config = extendDefaults(config || {});\r\n    var dimensions = Dimensions(config);\r\n    var texture = Texture(config.texture, dimensions);\r\n    var terrain = Terrain(config.terrain, dimensions);\r\n    var profiles;\r\n    if (config.profiles) {\r\n        profiles = Profiles(config.profiles, terrain, dimensions);\r\n    }\r\n    return new ThreeDMapUntiled(dimensions, terrain, texture, profiles);\r\n}\r\n\r\nwindow.Wxs3Map = Wxs3Map;\r\n\r\nexport default Wxs3Map;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = _;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 1\n ** module chunks = 0\n **/","import {\r\n    WebGLRenderer,\r\n    Scene,\r\n    AmbientLight,\r\n    PerspectiveCamera,\r\n    PlaneGeometry,\r\n    MeshPhongMaterial,\r\n    Mesh,\r\n    DoubleSide,\r\n    FrontSide\r\n} from 'three';\r\nimport TrackballControls from 'three.trackball';\r\nimport * as _ from 'underscore';\r\n\r\nimport TIFFParser from './../tiff-js/tiff.js';\r\nimport createQueryString from './util/createQueryString';\r\nimport events from './util/events';\r\nimport Line from './Line/Line';\r\n\r\n\r\nvar ThreeDMapUntiled = function (dim, terrain, texture, profiles) {\r\n    this.dim = dim;\r\n    this.terrain = terrain;\r\n    this.texture = texture;\r\n    this.profiles = profiles;\r\n    this.events = events();\r\n\r\n    this.reloadTimer = -1;\r\n\r\n    this.linesToClamp = [];\r\n\r\n    this._renderer = this._createRenderer();\r\n    this._camera = this._createCamera();\r\n    this._controls = this._createControls();\r\n    this._material = this._createMaterial();\r\n\r\n    //Create Mesh and Scene\r\n    var mesh = this._createMesh();\r\n    this._scene = this._createScene(mesh);\r\n\r\n    //Add webgl canvas to div\r\n    this.dim.div.appendChild(this._renderer.domElement);\r\n\r\n    //Start renderer and listen to changes in geometry\r\n    this._render();\r\n\r\n    //Load height model and texture asynchronously\r\n    this.events.fire('onTerrainLoadStart');\r\n    this.terrain.loadTerrain(this._terrainLoaded.bind(this));\r\n\r\n    this.events.fire('onTextureLoadStart');\r\n    this.texture.loadTexture(this._material, this._textureLoaded.bind(this));\r\n\r\n    //Adust canvas if container is resized\r\n    window.addEventListener('resize', this._resizeMe.bind(this), false);\r\n    this.on('onTerrainLoadEnd', this._clampLines, this);\r\n};\r\n\r\nThreeDMapUntiled.prototype.on = function (event, callback, context) {\r\n    this.events.on(event, callback, context);\r\n};\r\n\r\n\r\nThreeDMapUntiled.prototype._terrainLoaded = function () {\r\n    this.events.fire('onTerrainLoadEnd');\r\n    this._scene.add(this.terrain.getSides());\r\n\r\n    if (this.profiles) {\r\n        this.profiles.load(this._profilesLoaded.bind(this));\r\n    }\r\n};\r\n\r\nThreeDMapUntiled.prototype._profilesLoaded = function (meshes) {\r\n    _.each(meshes, function (mesh) {\r\n        this._scene.add(mesh);\r\n    }, this);\r\n};\r\n\r\nThreeDMapUntiled.prototype._textureLoaded = function (texture) {\r\n    this.events.fire('onTextureLoadEnd');\r\n};\r\n\r\nThreeDMapUntiled.prototype._createRenderer = function () {\r\n    var renderer = new WebGLRenderer({\r\n        alpha: true\r\n    });\r\n    renderer.setSize(this.dim.width, this.dim.height);\r\n    return renderer;\r\n};\r\n\r\n\r\nThreeDMapUntiled.prototype._createScene = function (mesh) {\r\n    var scene = new Scene();\r\n\r\n    //Ambient Light for MeshPhongMaterial\r\n    scene.add(new AmbientLight(0xffffff));\r\n    scene.add(mesh);\r\n\r\n    return scene;\r\n};\r\n\r\nThreeDMapUntiled.prototype._createCamera = function () {\r\n    var fov = 45,\r\n        cameraHeight;\r\n\r\n    var camera = new PerspectiveCamera(\r\n        fov,\r\n        this.dim.width / this.dim.height,\r\n        0.1,\r\n        1000\r\n    );\r\n\r\n    // Some trig to find height for camera\r\n    if (!!this.dim.Z) {\r\n        cameraHeight = this.dim.Z;\r\n    } else {\r\n        //Adapt optimal side length according to canvas\r\n        var sideLength;\r\n        var canvCoefficient = this.dim.width / this.dim.height;\r\n        if (canvCoefficient < (this.dim.demWidth / this.dim.demHeight)) {\r\n            sideLength = this.dim.demWidth / canvCoefficient;\r\n        } else {\r\n            sideLength = this.dim.demHeight;\r\n        }\r\n\r\n        //calculate camera height\r\n        cameraHeight = (sideLength / 2) / Math.tan((fov / 2) * Math.PI / 180);\r\n    }\r\n\r\n    camera.position.set(0, 0, cameraHeight);\r\n    return camera;\r\n};\r\n\r\nThreeDMapUntiled.prototype._createMaterial = function () {\r\n    var material = new MeshPhongMaterial({ //for shading and Ambient Light\r\n        side: this.terrain.showBox ? FrontSide : DoubleSide\r\n    });\r\n    material.wireframe = this.dim.wireframe;\r\n    return material;\r\n};\r\n\r\nThreeDMapUntiled.prototype._createMesh = function () {\r\n    return new Mesh(this.terrain.getGeometry(), this._material);\r\n};\r\n\r\nThreeDMapUntiled.prototype._createControls = function () {\r\n    return new TrackballControls(this._camera);\r\n};\r\n\r\nThreeDMapUntiled.prototype._render = function () {\r\n    this._controls.update();\r\n    window.requestAnimationFrame(this._render.bind(this));\r\n    this._renderer.render(this._scene, this._camera);\r\n};\r\n\r\nThreeDMapUntiled.prototype._resizeMe = function () {\r\n    window.clearTimeout(this.reloadTimer);\r\n    this.reloadTimer = window.setTimeout(this._reloadAll.bind(this), 1000);\r\n    return;\r\n};\r\n\r\nThreeDMapUntiled.prototype._reloadAll = function () {\r\n    this.dim.width = this.dim.div.clientWidth;\r\n    this.dim.height = this.dim.div.clientHeight;\r\n\r\n    this._camera.aspect = this.dim.width / this.dim.height;\r\n    this._camera.updateProjectionMatrix();\r\n\r\n    delete(this._controls);\r\n    this._controls = this._createControls();\r\n    this._renderer.setSize(this.dim.width, this.dim.height);\r\n};\r\n\r\nThreeDMapUntiled.prototype.addLine = function (lineGeom, lineStyle) {\r\n    var line = Line(lineGeom, lineStyle, this.terrain.getGeometry(), this.dim.envelope);\r\n    var threeLine = line.getThreeLine();\r\n    this._scene.add(threeLine);\r\n    if (line.needsClamp()) {\r\n        this.linesToClamp.push(line);\r\n    }\r\n};\r\n\r\nThreeDMapUntiled.prototype._clampLines = function () {\r\n    _.each(this.linesToClamp, function (line) {\r\n        var oldLine = line.getThreeLine();\r\n        var clamped = line.clamp();\r\n        this._scene.remove(oldLine);\r\n        this._scene.add(clamped);\r\n    }, this);\r\n    this.linesToClamp = [];\r\n};\r\n\r\nexport default ThreeDMapUntiled;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ThreeDMapUntiled.js\n **/","module.exports = THREE;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"THREE\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = TrackballControls;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TrackballControls\"\n ** module id = 4\n ** module chunks = 0\n **/","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\r\n\r\n\"use strict\";\r\n\r\nfunction TIFFParser() {\r\n\tthis.tiffDataView = undefined;\r\n\tthis.littleEndian = undefined;\r\n\tthis.fileDirectories = [];\r\n};\r\n\r\nTIFFParser.prototype = {\r\n\tisLittleEndian: function () {\r\n\t\t// Get byte order mark.\r\n\t\tvar BOM = this.getBytes(2, 0);\r\n\r\n\t\t// Find out the endianness.\r\n\t\tif (BOM === 0x4949) {\r\n\t\t\tthis.littleEndian = true;\r\n\t\t} else if (BOM === 0x4D4D) {\r\n\t\t\tthis.littleEndian = false;\r\n\t\t} else {\r\n\t\t\tconsole.log( BOM );\r\n\t\t\tthrow TypeError(\"Invalid byte order value.\");\r\n\t\t}\r\n\r\n\t\treturn this.littleEndian;\r\n\t},\r\n\r\n\thasTowel: function () {\r\n\t\t// Check for towel.\r\n\t\tif (this.getBytes(2, 2) !== 42) {\r\n\t\t\tthrow RangeError(\"You forgot your towel!\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\tgetFieldTagName: function (fieldTag) {\r\n\t\t// See: http://www.digitizationguidelines.gov/guidelines/TIFF_Metadata_Final.pdf\r\n\t\t// See: http://www.digitalpreservation.gov/formats/content/tiff_tags.shtml\r\n\t\tvar fieldTagNames = {\r\n\t\t\t// TIFF Baseline\r\n\t\t\t0x013B: 'Artist',\r\n\t\t\t0x0102: 'BitsPerSample',\r\n\t\t\t0x0109: 'CellLength',\r\n\t\t\t0x0108: 'CellWidth',\r\n\t\t\t0x0140: 'ColorMap',\r\n\t\t\t0x0103: 'Compression',\r\n\t\t\t0x8298: 'Copyright',\r\n\t\t\t0x0132: 'DateTime',\r\n\t\t\t0x0152: 'ExtraSamples',\r\n\t\t\t0x010A: 'FillOrder',\r\n\t\t\t0x0121: 'FreeByteCounts',\r\n\t\t\t0x0120: 'FreeOffsets',\r\n\t\t\t0x0123: 'GrayResponseCurve',\r\n\t\t\t0x0122: 'GrayResponseUnit',\r\n\t\t\t0x013C: 'HostComputer',\r\n\t\t\t0x010E: 'ImageDescription',\r\n\t\t\t0x0101: 'ImageLength',\r\n\t\t\t0x0100: 'ImageWidth',\r\n\t\t\t0x010F: 'Make',\r\n\t\t\t0x0119: 'MaxSampleValue',\r\n\t\t\t0x0118: 'MinSampleValue',\r\n\t\t\t0x0110: 'Model',\r\n\t\t\t0x00FE: 'NewSubfileType',\r\n\t\t\t0x0112: 'Orientation',\r\n\t\t\t0x0106: 'PhotometricInterpretation',\r\n\t\t\t0x011C: 'PlanarConfiguration',\r\n\t\t\t0x0128: 'ResolutionUnit',\r\n\t\t\t0x0116: 'RowsPerStrip',\r\n\t\t\t0x0115: 'SamplesPerPixel',\r\n\t\t\t0x0131: 'Software',\r\n\t\t\t0x0117: 'StripByteCounts',\r\n\t\t\t0x0111: 'StripOffsets',\r\n\t\t\t0x00FF: 'SubfileType',\r\n\t\t\t0x0107: 'Threshholding',\r\n\t\t\t0x011A: 'XResolution',\r\n\t\t\t0x011B: 'YResolution',\r\n\r\n\t\t\t// TIFF Extended\r\n\t\t\t0x0146: 'BadFaxLines',\r\n\t\t\t0x0147: 'CleanFaxData',\r\n\t\t\t0x0157: 'ClipPath',\r\n\t\t\t0x0148: 'ConsecutiveBadFaxLines',\r\n\t\t\t0x01B1: 'Decode',\r\n\t\t\t0x01B2: 'DefaultImageColor',\r\n\t\t\t0x010D: 'DocumentName',\r\n\t\t\t0x0150: 'DotRange',\r\n\t\t\t0x0141: 'HalftoneHints',\r\n\t\t\t0x015A: 'Indexed',\r\n\t\t\t0x015B: 'JPEGTables',\r\n\t\t\t0x011D: 'PageName',\r\n\t\t\t0x0129: 'PageNumber',\r\n\t\t\t0x013D: 'Predictor',\r\n\t\t\t0x013F: 'PrimaryChromaticities',\r\n\t\t\t0x0214: 'ReferenceBlackWhite',\r\n\t\t\t0x0153: 'SampleFormat',\r\n\t\t\t0x022F: 'StripRowCounts',\r\n\t\t\t0x014A: 'SubIFDs',\r\n\t\t\t0x0124: 'T4Options',\r\n\t\t\t0x0125: 'T6Options',\r\n\t\t\t0x0145: 'TileByteCounts',\r\n\t\t\t0x0143: 'TileLength',\r\n\t\t\t0x0144: 'TileOffsets',\r\n\t\t\t0x0142: 'TileWidth',\r\n\t\t\t0x012D: 'TransferFunction',\r\n\t\t\t0x013E: 'WhitePoint',\r\n\t\t\t0x0158: 'XClipPathUnits',\r\n\t\t\t0x011E: 'XPosition',\r\n\t\t\t0x0211: 'YCbCrCoefficients',\r\n\t\t\t0x0213: 'YCbCrPositioning',\r\n\t\t\t0x0212: 'YCbCrSubSampling',\r\n\t\t\t0x0159: 'YClipPathUnits',\r\n\t\t\t0x011F: 'YPosition',\r\n\r\n\t\t\t// EXIF\r\n\t\t\t0x9202: 'ApertureValue',\r\n\t\t\t0xA001: 'ColorSpace',\r\n\t\t\t0x9004: 'DateTimeDigitized',\r\n\t\t\t0x9003: 'DateTimeOriginal',\r\n\t\t\t0x8769: 'Exif IFD',\r\n\t\t\t0x9000: 'ExifVersion',\r\n\t\t\t0x829A: 'ExposureTime',\r\n\t\t\t0xA300: 'FileSource',\r\n\t\t\t0x9209: 'Flash',\r\n\t\t\t0xA000: 'FlashpixVersion',\r\n\t\t\t0x829D: 'FNumber',\r\n\t\t\t0xA420: 'ImageUniqueID',\r\n\t\t\t0x9208: 'LightSource',\r\n\t\t\t0x927C: 'MakerNote',\r\n\t\t\t0x9201: 'ShutterSpeedValue',\r\n\t\t\t0x9286: 'UserComment',\r\n\r\n\t\t\t// IPTC\r\n\t\t\t0x83BB: 'IPTC',\r\n\r\n\t\t\t// ICC\r\n\t\t\t0x8773: 'ICC Profile',\r\n\r\n\t\t\t// XMP\r\n\t\t\t0x02BC: 'XMP',\r\n\r\n\t\t\t// GDAL\r\n\t\t\t0xA480: 'GDAL_METADATA',\r\n\t\t\t0xA481: 'GDAL_NODATA',\r\n\r\n\t\t\t// Photoshop\r\n\t\t\t0x8649: 'Photoshop',\r\n\t\t};\r\n\r\n\t\tvar fieldTagName;\r\n\r\n\t\tif (fieldTag in fieldTagNames) {\r\n\t\t\tfieldTagName = fieldTagNames[fieldTag];\r\n\t\t} else {\r\n\t\t\t//console.log( \"Unknown Field Tag:\", fieldTag);\r\n\t\t\tfieldTagName = \"Tag\" + fieldTag;\r\n\t\t}\r\n\r\n\t\treturn fieldTagName;\r\n\t},\r\n\r\n\tgetFieldTypeName: function (fieldType) {\r\n\t\tvar fieldTypeNames = {\r\n\t\t\t0x0001: 'BYTE',\r\n\t\t\t0x0002: 'ASCII',\r\n\t\t\t0x0003: 'SHORT',\r\n\t\t\t0x0004: 'LONG',\r\n\t\t\t0x0005: 'RATIONAL',\r\n\t\t\t0x0006: 'SBYTE',\r\n\t\t\t0x0007: 'UNDEFINED',\r\n\t\t\t0x0008: 'SSHORT',\r\n\t\t\t0x0009: 'SLONG',\r\n\t\t\t0x000A: 'SRATIONAL',\r\n\t\t\t0x000B: 'FLOAT',\r\n\t\t\t0x000C: 'DOUBLE',\r\n\t\t};\r\n\r\n\t\tvar fieldTypeName;\r\n\r\n\t\tif (fieldType in fieldTypeNames) {\r\n\t\t\tfieldTypeName = fieldTypeNames[fieldType];\r\n\t\t}\r\n\r\n\t\treturn fieldTypeName;\r\n\t},\r\n\r\n\tgetFieldTypeLength: function (fieldTypeName) {\r\n\t\tvar fieldTypeLength;\r\n\r\n\t\tif (['BYTE', 'ASCII', 'SBYTE', 'UNDEFINED'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\tfieldTypeLength = 1;\r\n\t\t} else if (['SHORT', 'SSHORT'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\tfieldTypeLength = 2;\r\n\t\t} else if (['LONG', 'SLONG', 'FLOAT'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\tfieldTypeLength = 4;\r\n\t\t} else if (['RATIONAL', 'SRATIONAL', 'DOUBLE'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\tfieldTypeLength = 8;\r\n\t\t}\r\n\r\n\t\treturn fieldTypeLength;\r\n\t},\r\n\r\n\tgetBits: function (numBits, byteOffset, bitOffset) {\r\n\t\tbitOffset = bitOffset || 0;\r\n\t\tvar extraBytes = Math.floor(bitOffset / 8);\r\n\t\tvar newByteOffset = byteOffset + extraBytes;\r\n\t\tvar totalBits = bitOffset + numBits;\r\n\t\tvar shiftRight = 32 - numBits;\r\n\r\n\t\tif (totalBits <= 0) {\r\n\t\t\tconsole.log( numBits, byteOffset, bitOffset );\r\n\t\t\tthrow RangeError(\"No bits requested\");\r\n\t\t} else if (totalBits <= 8) {\r\n\t\t\tvar shiftLeft = 24 + bitOffset;\r\n\t\t\tvar rawBits = this.tiffDataView.getUint8(newByteOffset, this.littleEndian);\r\n\t\t} else if (totalBits <= 16) {\r\n\t\t\tvar shiftLeft = 16 + bitOffset;\r\n\t\t\tvar rawBits = this.tiffDataView.getUint16(newByteOffset, this.littleEndian);\r\n\t\t} else if (totalBits <= 32) {\r\n\t\t\tvar shiftLeft = bitOffset;\r\n\t\t\tvar rawBits = this.tiffDataView.getUint32(newByteOffset, this.littleEndian);\r\n\t\t} else {\r\n\t\t\tconsole.log( numBits, byteOffset, bitOffset );\r\n\t\t\tthrow RangeError(\"Too many bits requested\");\r\n\t\t}\r\n\r\n\t\tvar chunkInfo = {\r\n\t\t\t'bits': ((rawBits << shiftLeft) >>> shiftRight),\r\n\t\t\t'byteOffset': newByteOffset + Math.floor(totalBits / 8),\r\n\t\t\t'bitOffset': totalBits % 8,\r\n\t\t};\r\n\r\n\t\treturn chunkInfo;\r\n\t},\r\n\r\n\tgetBytes: function (numBytes, offset) {\r\n\t\tif (numBytes <= 0) {\r\n\t\t\tconsole.log( numBytes, offset );\r\n\t\t\tthrow RangeError(\"No bytes requested\");\r\n\t\t} else if (numBytes <= 1) {\r\n\t\t\treturn this.tiffDataView.getUint8(offset, this.littleEndian);\r\n\t\t} else if (numBytes <= 2) {\r\n\t\t\treturn this.tiffDataView.getUint16(offset, this.littleEndian);\r\n\t\t} else if (numBytes <= 3) {\r\n\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian) >>> 8;\r\n\t\t} else if (numBytes <= 4) {\r\n\t\t\treturn this.tiffDataView.getUint32(offset, this.littleEndian);\r\n            //return this.tiffDataView.getFloat32(offset, this.littleEndian);\r\n\t\t} else {\r\n\t\t\tconsole.log( numBytes, offset );\r\n\t\t\tthrow RangeError(\"Too many bytes requested\");\r\n\t\t}\r\n\t},\r\n\r\n\tgetFieldValues: function (fieldTagName, fieldTypeName, typeCount, valueOffset) {\r\n\t\tvar fieldValues = [];\r\n\r\n\t\tvar fieldTypeLength = this.getFieldTypeLength(fieldTypeName);\r\n\t\tvar fieldValueSize = fieldTypeLength * typeCount;\r\n\r\n\t\tif (fieldValueSize <= 4) {\r\n\t\t\t// The value is stored at the big end of the valueOffset.\r\n\t\t\tif (this.littleEndian === false) {\r\n\t\t\t\tvar value = valueOffset >>> ((4 - fieldTypeLength) * 8);\r\n\t\t\t} else {\r\n\t\t\t\tvar value = valueOffset;\r\n\t\t\t}\r\n\r\n\t\t\tfieldValues.push(value);\r\n\t\t} else {\r\n\t\t\tfor (var i = 0; i < typeCount; i++) {\r\n\t\t\t\tvar indexOffset = fieldTypeLength * i;\r\n\r\n\t\t\t\tif (fieldTypeLength >= 8) {\r\n\t\t\t\t\tif (['RATIONAL', 'SRATIONAL'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\t\t\t\t// Numerator\r\n\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset));\r\n\t\t\t\t\t\t// Denominator\r\n\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset + 4));\r\n\t\t\t\t\t} else if (['DOUBLE'].indexOf(fieldTypeName) !== -1) {\r\n\t\t\t\t\t\tfieldValues.push(this.getBytes(4, valueOffset + indexOffset) + this.getBytes(4, valueOffset + indexOffset + 4));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log( fieldTypeName, typeCount, fieldValueSize );\r\n\t\t\t\t\t\tthrow TypeError(\"Can't handle this field type or size\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfieldValues.push(this.getBytes(fieldTypeLength, valueOffset + indexOffset));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (fieldTypeName === 'ASCII') {\r\n\t\t\tfieldValues.forEach(function(e, i, a) { a[i] = String.fromCharCode(e); });\r\n\t\t}\r\n\r\n\t\treturn fieldValues;\r\n\t},\r\n\r\n\tclampColorSample: function(colorSample, bitsPerSample) {\r\n\t\tvar multiplier = Math.pow(2, 8 - bitsPerSample);\r\n\r\n\t\treturn Math.floor((colorSample * multiplier) + (multiplier - 1));\r\n\t},\r\n\r\n\tmakeRGBAFillValue: function(r, g, b, a) {\r\n\t\tif(typeof a === 'undefined') {\r\n\t\t\ta = 1.0;\r\n\t\t}\r\n\t\treturn \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + a + \")\";\r\n\t},\r\n\r\n\tparseFileDirectory: function (byteOffset) {\r\n\t\tvar numDirEntries = this.getBytes(2, byteOffset);\r\n\r\n\t\tvar tiffFields = [];\r\n\r\n\t\tfor (var i = byteOffset + 2, entryCount = 0; entryCount < numDirEntries; i += 12, entryCount++) {\r\n\t\t\tvar fieldTag = this.getBytes(2, i);\r\n\t\t\tvar fieldType = this.getBytes(2, i + 2);\r\n\t\t\tvar typeCount = this.getBytes(4, i + 4);\r\n\t\t\tvar valueOffset = this.getBytes(4, i + 8);\r\n\r\n\t\t\tvar fieldTagName = this.getFieldTagName( fieldTag );\r\n\t\t\tvar fieldTypeName = this.getFieldTypeName( fieldType );\r\n\r\n\t\t\tvar fieldValues = this.getFieldValues(fieldTagName, fieldTypeName, typeCount, valueOffset);\r\n\r\n\t\t\ttiffFields[fieldTagName] = { 'type': fieldTypeName, 'values': fieldValues };\r\n\t\t}\r\n\r\n\t\tthis.fileDirectories.push( tiffFields );\r\n\r\n\t\tvar nextIFDByteOffset = this.getBytes(4, i);\r\n\r\n\t\tif (nextIFDByteOffset === 0x00000000) {\r\n\t\t\treturn this.fileDirectories;\r\n\t\t} else {\r\n\t\t\treturn this.parseFileDirectory(nextIFDByteOffset);\r\n\t\t}\r\n\t},\r\n\r\n\tparseTIFF: function (tiffArrayBuffer, canvas) {\r\n\t\tcanvas = canvas || document.createElement('canvas');\r\n\r\n\t\tthis.tiffDataView = new DataView(tiffArrayBuffer);\r\n\t\tthis.canvas = canvas;\r\n\r\n\t\tthis.littleEndian = this.isLittleEndian(this.tiffDataView);\r\n\r\n\t\tif (!this.hasTowel(this.tiffDataView, this.littleEndian)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar firstIFDByteOffset = this.getBytes(4, 4);\r\n\r\n\t\tthis.fileDirectories = this.parseFileDirectory(firstIFDByteOffset);\r\n\r\n\t\tvar fileDirectory = this.fileDirectories[0];\r\n\r\n\t\t//console.log( fileDirectory );\r\n\r\n\t\tvar imageWidth = fileDirectory.ImageWidth.values[0];\r\n\t\tvar imageLength = fileDirectory.ImageLength.values[0];\r\n\r\n\t\tthis.canvas.width = imageWidth;\r\n\t\tthis.canvas.height = imageLength;\r\n\r\n\t\tvar strips = [];\r\n\r\n\t\tvar compression = (fileDirectory.Compression) ? fileDirectory.Compression.values[0] : 1;\r\n\r\n\t\tvar samplesPerPixel = fileDirectory.SamplesPerPixel.values[0];\r\n\r\n\t\tvar sampleProperties = [];\r\n\r\n\t\tvar bitsPerPixel = 0;\r\n\t\tvar hasBytesPerPixel = false;\r\n\r\n\t\tfileDirectory.BitsPerSample.values.forEach(function(bitsPerSample, i, bitsPerSampleValues) {\r\n\t\t\tsampleProperties[i] = {\r\n\t\t\t\t'bitsPerSample': bitsPerSample,\r\n\t\t\t\t'hasBytesPerSample': false,\r\n\t\t\t\t'bytesPerSample': undefined,\r\n\t\t\t};\r\n\r\n\t\t\tif ((bitsPerSample % 8) === 0) {\r\n\t\t\t\tsampleProperties[i].hasBytesPerSample = true;\r\n\t\t\t\tsampleProperties[i].bytesPerSample = bitsPerSample / 8;\r\n\t\t\t}\r\n\r\n\t\t\tbitsPerPixel += bitsPerSample;\r\n\t\t}, this);\r\n\r\n\t\tif ((bitsPerPixel % 8) === 0) {\r\n\t\t\thasBytesPerPixel = true;\r\n\t\t\tvar bytesPerPixel = bitsPerPixel / 8;\r\n\t\t}\r\n\r\n\t\tvar stripOffsetValues = fileDirectory.StripOffsets.values;\r\n\t\tvar numStripOffsetValues = stripOffsetValues.length;\r\n\r\n\t\t// StripByteCounts is supposed to be required, but see if we can recover anyway.\r\n\t\tif (fileDirectory.StripByteCounts) {\r\n\t\t\tvar stripByteCountValues = fileDirectory.StripByteCounts.values;\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Missing StripByteCounts!\");\r\n\r\n\t\t\t// Infer StripByteCounts, if possible.\r\n\t\t\tif (numStripOffsetValues === 1) {\r\n\t\t\t\tvar stripByteCountValues = [Math.ceil((imageWidth * imageLength * bitsPerPixel) / 8)];\r\n\t\t\t} else {\r\n\t\t\t\tthrow Error(\"Cannot recover from missing StripByteCounts\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Loop through strips and decompress as necessary.\r\n\t\tfor (var i = 0; i < numStripOffsetValues; i++) {\r\n\t\t\tvar stripOffset = stripOffsetValues[i];\r\n\t\t\tstrips[i] = [];\r\n\r\n\t\t\tvar stripByteCount = stripByteCountValues[i];\r\n\r\n\t\t\t// Loop through pixels.\r\n\t\t\tfor (var byteOffset = 0, bitOffset = 0, jIncrement = 1, getHeader = true, pixel = [], numBytes = 0, sample = 0, currentSample = 0; byteOffset < stripByteCount; byteOffset += jIncrement) {\r\n\t\t\t\t// Decompress strip.\r\n\t\t\t\tswitch (compression) {\r\n\t\t\t\t\t// Uncompressed\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t// Loop through samples (sub-pixels).\r\n\t\t\t\t\t\tfor (var m = 0, pixel = []; m < samplesPerPixel; m++) {\r\n\t\t\t\t\t\t\tif (sampleProperties[m].hasBytesPerSample) {\r\n\t\t\t\t\t\t\t\t// XXX: This is wrong!\r\n\t\t\t\t\t\t\t\tvar sampleOffset = sampleProperties[m].bytesPerSample * m;\r\n\r\n\t\t\t\t\t\t\t\t//pixel.push(this.getBytes(sampleProperties[m].bytesPerSample, stripOffset + byteOffset + sampleOffset));\r\n                                pixel.push(this.tiffDataView.getFloat32(stripOffset + byteOffset + sampleOffset, this.littleEndian ));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar sampleInfo = this.getBits(sampleProperties[m].bitsPerSample, stripOffset + byteOffset, bitOffset);\r\n\r\n\t\t\t\t\t\t\t\tpixel.push(sampleInfo.bits);\r\n\r\n\t\t\t\t\t\t\t\tbyteOffset = sampleInfo.byteOffset - stripOffset;\r\n\t\t\t\t\t\t\t\tbitOffset = sampleInfo.bitOffset;\r\n\r\n\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstrips[i].push(pixel);\r\n\r\n\t\t\t\t\t\tif (hasBytesPerPixel) {\r\n\t\t\t\t\t\t\tjIncrement = bytesPerPixel;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tjIncrement = 0;\r\n\r\n\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per pixel\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// CITT Group 3 1-Dimensional Modified Huffman run-length encoding\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Group 3 Fax\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Group 4 Fax\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// LZW\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Old-style JPEG (TIFF 6.0)\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// New-style JPEG (TIFF Specification Supplement 2)\r\n\t\t\t\t\tcase 7:\r\n\t\t\t\t\t\t// XXX: Use PDF.js code?\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// PackBits\r\n\t\t\t\t\tcase 32773:\r\n\t\t\t\t\t\t// Are we ready for a new block?\r\n\t\t\t\t\t\tif (getHeader) {\r\n\t\t\t\t\t\t\tgetHeader = false;\r\n\r\n\t\t\t\t\t\t\tvar blockLength = 1;\r\n\t\t\t\t\t\t\tvar iterations = 1;\r\n\r\n\t\t\t\t\t\t\t// The header byte is signed.\r\n\t\t\t\t\t\t\tvar header = this.tiffDataView.getInt8(stripOffset + byteOffset, this.littleEndian);\r\n\r\n\t\t\t\t\t\t\tif ((header >= 0) && (header <= 127)) { // Normal pixels.\r\n\t\t\t\t\t\t\t\tblockLength = header + 1;\r\n\t\t\t\t\t\t\t} else if ((header >= -127) && (header <= -1)) { // Collapsed pixels.\r\n\t\t\t\t\t\t\t\titerations = -header + 1;\r\n\t\t\t\t\t\t\t} else /*if (header === -128)*/ { // Placeholder byte?\r\n\t\t\t\t\t\t\t\tgetHeader = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar currentByte = this.getBytes(1, stripOffset + byteOffset);\r\n\r\n\t\t\t\t\t\t\t// Duplicate bytes, if necessary.\r\n\t\t\t\t\t\t\tfor (var m = 0; m < iterations; m++) {\r\n\t\t\t\t\t\t\t\tif (sampleProperties[sample].hasBytesPerSample) {\r\n\t\t\t\t\t\t\t\t\t// We're reading one byte at a time, so we need to handle multi-byte samples.\r\n\t\t\t\t\t\t\t\t\tcurrentSample = (currentSample << (8 * numBytes)) | currentByte;\r\n\t\t\t\t\t\t\t\t\tnumBytes++;\r\n\r\n\t\t\t\t\t\t\t\t\t// Is our sample complete?\r\n\t\t\t\t\t\t\t\t\tif (numBytes === sampleProperties[sample].bytesPerSample) {\r\n\t\t\t\t\t\t\t\t\t\tpixel.push(currentSample);\r\n\t\t\t\t\t\t\t\t\t\tcurrentSample = numBytes = 0;\r\n\t\t\t\t\t\t\t\t\t\tsample++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow RangeError(\"Cannot handle sub-byte bits per sample\");\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Is our pixel complete?\r\n\t\t\t\t\t\t\t\tif (sample === samplesPerPixel)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tstrips[i].push(pixel);\r\n\r\n\t\t\t\t\t\t\t\t\tpixel = [];\r\n\t\t\t\t\t\t\t\t\tsample = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tblockLength--;\r\n\r\n\t\t\t\t\t\t\t// Is our block complete?\r\n\t\t\t\t\t\t\tif (blockLength === 0) {\r\n\t\t\t\t\t\t\t\tgetHeader = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tjIncrement = 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// Unknown compression algorithm\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// Do not attempt to parse the image data.\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n//\t\t\tconsole.log( strips[i] );\r\n\t\t}\r\n\r\n\t\t//console.log( strips );\r\n        return strips;\r\n\r\n\t\tif (canvas.getContext) {\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\");\r\n\r\n\t\t\t// Set a default fill style.\r\n\t\t\tctx.fillStyle = this.makeRGBAFillValue(255, 255, 255, 0);\r\n\r\n\t\t\t// If RowsPerStrip is missing, the whole image is in one strip.\r\n\t\t\tif (fileDirectory.RowsPerStrip) {\r\n\t\t\t\tvar rowsPerStrip = fileDirectory.RowsPerStrip.values[0];\r\n\t\t\t} else {\r\n\t\t\t\tvar rowsPerStrip = imageLength;\r\n\t\t\t}\r\n\r\n\t\t\tvar numStrips = strips.length;\r\n\r\n\t\t\tvar imageLengthModRowsPerStrip = imageLength % rowsPerStrip;\r\n\t\t\tvar rowsInLastStrip = (imageLengthModRowsPerStrip === 0) ? rowsPerStrip : imageLengthModRowsPerStrip;\r\n\r\n\t\t\tvar numRowsInStrip = rowsPerStrip;\r\n\t\t\tvar numRowsInPreviousStrip = 0;\r\n\r\n\t\t\tvar photometricInterpretation = fileDirectory.PhotometricInterpretation.values[0];\r\n\r\n\t\t\tvar extraSamplesValues = [];\r\n\t\t\tvar numExtraSamples = 0;\r\n\r\n\t\t\tif (fileDirectory.ExtraSamples) {\r\n\t\t\t\textraSamplesValues = fileDirectory.ExtraSamples.values;\r\n\t\t\t\tnumExtraSamples = extraSamplesValues.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (fileDirectory.ColorMap) {\r\n\t\t\t\tvar colorMapValues = fileDirectory.ColorMap.values;\r\n\t\t\t\tvar colorMapSampleSize = Math.pow(2, sampleProperties[0].bitsPerSample);\r\n\t\t\t}\r\n\r\n\t\t\t// Loop through the strips in the image.\r\n\t\t\tfor (var i = 0; i < numStrips; i++) {\r\n\t\t\t\t// The last strip may be short.\r\n\t\t\t\tif ((i + 1) === numStrips) {\r\n\t\t\t\t\tnumRowsInStrip = rowsInLastStrip;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar numPixels = strips[i].length;\r\n\t\t\t\tvar yPadding = numRowsInPreviousStrip * i;\r\n\r\n\t\t\t\t// Loop through the rows in the strip.\r\n\t\t\t\tfor (var y = 0, j = 0; y < numRowsInStrip, j < numPixels; y++) {\r\n\t\t\t\t\t// Loop through the pixels in the row.\r\n\t\t\t\t\tfor (var x = 0; x < imageWidth; x++, j++) {\r\n\t\t\t\t\t\tvar pixelSamples = strips[i][j];\r\n\r\n\t\t\t\t\t\tvar red = 0;\r\n\t\t\t\t\t\tvar green = 0;\r\n\t\t\t\t\t\tvar blue = 0;\r\n\t\t\t\t\t\tvar opacity = 1.0;\r\n\r\n\t\t\t\t\t\tif (numExtraSamples > 0) {\r\n\t\t\t\t\t\t\tfor (var k = 0; k < numExtraSamples; k++) {\r\n\t\t\t\t\t\t\t\tif (extraSamplesValues[k] === 1 || extraSamplesValues[k] === 2) {\r\n\t\t\t\t\t\t\t\t\t// Clamp opacity to the range [0,1].\r\n\t\t\t\t\t\t\t\t\topacity = pixelSamples[3 + k] / 256;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tswitch (photometricInterpretation) {\r\n\t\t\t\t\t\t\t// Bilevel or Grayscale\r\n\t\t\t\t\t\t\t// WhiteIsZero\r\n\t\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\t\tif (sampleProperties[0].hasBytesPerSample) {\r\n\t\t\t\t\t\t\t\t\tvar invertValue = Math.pow(0x10, sampleProperties[0].bytesPerSample * 2);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Invert samples.\r\n\t\t\t\t\t\t\t\tpixelSamples.forEach(function(sample, index, samples) { samples[index] = invertValue - sample; });\r\n\r\n\t\t\t\t\t\t\t// Bilevel or Grayscale\r\n\t\t\t\t\t\t\t// BlackIsZero\r\n\t\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\t\tred = green = blue = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// RGB Full Color\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\tred = this.clampColorSample(pixelSamples[0], sampleProperties[0].bitsPerSample);\r\n\t\t\t\t\t\t\t\tgreen = this.clampColorSample(pixelSamples[1], sampleProperties[1].bitsPerSample);\r\n\t\t\t\t\t\t\t\tblue = this.clampColorSample(pixelSamples[2], sampleProperties[2].bitsPerSample);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// RGB Color Palette\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tif (colorMapValues === undefined) {\r\n\t\t\t\t\t\t\t\t\tthrow Error(\"Palette image missing color map\");\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tvar colorMapIndex = pixelSamples[0];\r\n\r\n\t\t\t\t\t\t\t\tred = this.clampColorSample(colorMapValues[colorMapIndex], 16);\r\n\t\t\t\t\t\t\t\tgreen = this.clampColorSample(colorMapValues[colorMapSampleSize + colorMapIndex], 16);\r\n\t\t\t\t\t\t\t\tblue = this.clampColorSample(colorMapValues[(2 * colorMapSampleSize) + colorMapIndex], 16);\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// Transparency mask\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: Transparency mask' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// CMYK\r\n\t\t\t\t\t\t\tcase 5:\r\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: CMYK' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// YCbCr\r\n\t\t\t\t\t\t\tcase 6:\r\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: YCbCr' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// CIELab\r\n\t\t\t\t\t\t\tcase 8:\r\n\t\t\t\t\t\t\t\tthrow RangeError( 'Not Yet Implemented: CIELab' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t// Unknown Photometric Interpretation\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthrow RangeError( 'Unknown Photometric Interpretation:', photometricInterpretation );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tctx.fillStyle = this.makeRGBAFillValue(red, green, blue, opacity);\r\n\t\t\t\t\t\tctx.fillRect(x, yPadding + y, 1, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumRowsInPreviousStrip = numRowsInStrip;\r\n\t\t\t}\r\n\t\t}\r\n\r\n/*\t\tfor (var i = 0, numFileDirectories = this.fileDirectories.length; i < numFileDirectories; i++) {\r\n\t\t\t// Stuff\r\n\t\t}*/\r\n\r\n\t\treturn this.canvas;\r\n\t}\r\n};\r\n\r\nexport default TIFFParser;\n\n\n/** WEBPACK FOOTER **\n ** ./tiff-js/tiff.js\n **/","import * as _ from 'underscore';\r\n\r\nexport default function createQueryString(params) {\r\n    return _.map(params, function (value, key) {\r\n        return encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n    }).join('&');\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/createQueryString.js\n **/","import * as _ from 'underscore';\r\n\r\nvar events = function () {\r\n\r\n    var observers = {};\r\n\r\n    return {\r\n        on: function (event, callback, context) {\r\n            if (!observers[event]) {\r\n                observers[event] = [];\r\n            }\r\n            if (context) {\r\n                callback = callback.bind(context);\r\n            }\r\n            observers[event].push(callback);\r\n        },\r\n        fire: function (event, data) {\r\n            if (observers[event]) {\r\n                _.each(observers[event], function (observer) {\r\n                    observer(event, data);\r\n                });\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport default events;\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/events.js\n **/","import * as _ from 'underscore';\r\nimport {\r\n    Line,\r\n    LineBasicMaterial,\r\n    Geometry,\r\n    Vector3\r\n} from 'three';\r\n\r\nimport clampLineString from './clampLineString';\r\nimport transform from '../util/transform';\r\n\r\nfunction ALine(lineGeom, style, geometry, envelope) {\r\n\r\n    var styleDefaults = {\r\n        color: 0x0000ff,\r\n        linewidth: 5\r\n    };\r\n\r\n    style = _.extend({}, styleDefaults, style || {});\r\n\r\n    var needsClamp = true;\r\n    var line;\r\n\r\n    function _createLine(points, color) {\r\n        var vertices = _.map(points, function (point) {\r\n            return new Vector3(point.x, point.y, point.z);\r\n        });\r\n\r\n        var material = new LineBasicMaterial(style);\r\n        var geometry = new Geometry();\r\n        geometry.vertices = vertices;\r\n        return new Line(geometry, material);\r\n    }\r\n\r\n    function getThreeLine() {\r\n\r\n        if (line) {\r\n            return line;\r\n        }\r\n\r\n        if (lineGeom.type !== 'LineString') {\r\n            throw new Error('Expected GeoJSON LineString geometry');\r\n        }\r\n\r\n        //get envelope stuff\r\n        var coordMinX = envelope.minX();\r\n        var coordMinY = envelope.minY();\r\n\r\n        //get the bbox of the geometry\r\n        geometry.computeBoundingBox();\r\n        var bbox = geometry.boundingBox;\r\n\r\n        var pixelMinX = bbox.min.x;\r\n        var pixelMinY = bbox.min.y;\r\n        var pixelWidth = Math.abs(bbox.max.x - pixelMinX);\r\n        var pixelHeight = Math.abs(bbox.max.y - pixelMinY);\r\n\r\n        var xFactor = envelope.width() / pixelWidth;\r\n        var yFactor = envelope.height() / pixelHeight;\r\n\r\n        var linedata = _.map(lineGeom.coordinates, function (coord) {\r\n            return transform(coord, 'EPSG:4326', envelope.mapCrs);\r\n        });\r\n\r\n        var points = _.map(linedata, function (coord) {\r\n            var x = coord[0];\r\n            var pixelX = pixelMinX + ((x - coordMinX) / xFactor);\r\n            var y = coord[1];\r\n            var pixelY = pixelMinY + ((y - coordMinY) / yFactor);\r\n            return {x: pixelX, y: pixelY, z: 0};\r\n        });\r\n\r\n        if (geometry.loaded) {\r\n            points = clampLineString(points, geometry);\r\n        }\r\n        line = _createLine(points);\r\n\r\n        if (geometry.loaded) {\r\n            needsClamp = false;\r\n        }\r\n        return line;\r\n    };\r\n\r\n    function clamp() {\r\n        line = _createLine(clampLineString(line.geometry.vertices, geometry));\r\n        return line;\r\n    }\r\n\r\n    return {\r\n        getThreeLine: getThreeLine,\r\n        clamp: clamp,\r\n        needsClamp: function needsClamp() {\r\n            return needsClamp;\r\n        }\r\n    };\r\n}\r\n\r\nexport default ALine;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Line/Line.js\n **/","import {Vector3} from 'three';\r\nimport * as _ from 'underscore';\r\n\r\nimport checkIntersect from './checkIntersect';\r\nimport lineIntersect from './lineIntersect';\r\n\r\nfunction calcZ(p1, p2, p3, x, y) {\r\n    var det = (p2.y - p3.y) * (p1.x - p3.x) + (p3.x - p2.x) * (p1.y - p3.y);\r\n    var l1 = ((p2.y - p3.y) * (x - p3.x) + (p3.x - p2.x) * (y - p3.y)) / det;\r\n    var l2 = ((p3.y - p1.y) * (x - p3.x) + (p1.x - p3.x) * (y - p3.y)) / det;\r\n    var l3 = 1.0 - l1 - l2;\r\n    return l1 * p1.z + l2 * p2.z + l3 * p3.z;\r\n}\r\n\r\nfunction getDistance(a, b) {\r\n    return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n}\r\n\r\nfunction clampLineSegment(l, geometry) {\r\n    return _.chain(geometry.faces)\r\n        .map(function (face) {\r\n            var a = geometry.vertices[face.a];\r\n            var b = geometry.vertices[face.b];\r\n            var c = geometry.vertices[face.c];\r\n\r\n            var line1 = [a, b];\r\n            var line2 = [b, c];\r\n            var line3 = [c, a];\r\n\r\n            var ints = [];\r\n            if (checkIntersect(l, line1) ) {\r\n                ints.push(lineIntersect(line1, l));\r\n            }\r\n            if (checkIntersect(l, line2) ) {\r\n                ints.push(lineIntersect(line2, l));\r\n            }\r\n            if (checkIntersect(l, line3) ) {\r\n                ints.push(lineIntersect(line3, l));\r\n            }\r\n            return _.map(ints, function (intersect) {\r\n                var z = calcZ(a, b, c, intersect.x, intersect.y);\r\n                return {\r\n                    x: intersect.x,\r\n                    y: intersect.y,\r\n                    z: z + 0.01,\r\n                    dist: getDistance(l[0], intersect)\r\n                };\r\n            });\r\n        }).\r\n        flatten()\r\n        .sortBy(function (p) {\r\n            return Math.abs(p.dist);\r\n        })\r\n        .value();\r\n}\r\n\r\nfunction clampLineString(line, geometry) {\r\n    var p = _.map(_.range(0, line.length - 1), function (i) {\r\n        var a = line[i];\r\n        var b = line[i + 1];\r\n        return clampLineSegment([a, b], geometry);\r\n    });\r\n    return _.flatten(p);\r\n}\r\n\r\nexport default clampLineString;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Line/clampLineString.js\n **/","// Given three colinear points p, q, r, the function checks if\r\n// point q lies on line segment 'pr'\r\nfunction onSegment(p, q, r) {\r\n    if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) &&\r\n        q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// To find orientation of ordered triplet (p, q, r).\r\n// The function returns following values\r\n// 0 --> p, q and r are colinear\r\n// 1 --> Clockwise\r\n// 2 --> Counterclockwise\r\nfunction orientation(p, q, r) {\r\n    // See http://www.geeksforgeeks.org/orientation-3-ordered-points/\r\n    // for details of below formula.\r\n    var val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n\r\n    if (val === 0) {\r\n        return 0;  // colinear\r\n    }\r\n    return (val > 0) ? 1 : 2; // clock or counterclock wise\r\n}\r\n\r\n// The main function that returns true if line segment 'p1q1'\r\n// and 'p2q2' intersect.\r\nfunction checkIntersect2(l1, l2) {\r\n\r\n    var p1 = l1[0];\r\n    var p2 = l1[1];\r\n\r\n    var q1 = l2[0];\r\n    var q2 = l2[1];\r\n\r\n    // Find the four orientations needed for general and\r\n    // special cases\r\n    var o1 = orientation(p1, q1, p2);\r\n    var o2 = orientation(p1, q1, q2);\r\n    var o3 = orientation(p2, q2, p1);\r\n    var o4 = orientation(p2, q2, q1);\r\n    // General case\r\n    if (o1 !== o2 && o3 !== o4) {\r\n        return true;\r\n    }\r\n\r\n    // Special Cases\r\n    // p1, q1 and p2 are colinear and p2 lies on segment p1q1\r\n    if (o1 === 0 && onSegment(p1, p2, q1)) {\r\n        return true;\r\n    };\r\n\r\n    // p1, q1 and p2 are colinear and q2 lies on segment p1q1\r\n    if (o2 === 0 && onSegment(p1, q2, q1)) {\r\n        return true;\r\n    }\r\n\r\n    // p2, q2 and p1 are colinear and p1 lies on segment p2q2\r\n    if (o3 === 0 && onSegment(p2, p1, q2)) {\r\n        return true;\r\n    }\r\n     // p2, q2 and q1 are colinear and q1 lies on segment p2q2\r\n    if (o4 === 0 && onSegment(p2, q1, q2)) {\r\n        return true;\r\n    }\r\n\r\n    return false; // Doesn't fall in any of the above cases\r\n}\r\n\r\nfunction Turn(p1, p2, p3) {\r\n  var a = p1.x;\r\n  var b = p1.y;\r\n  var c = p2.x;\r\n  var d = p2.y;\r\n  var e = p3.x;\r\n  var f = p3.y;\r\n  var A = (f - b) * (c - a);\r\n  var B = (d - b) * (e - a);\r\n  return (A > B + Number.EPSILON) ? 1 : (A + Number.EPSILON < B) ? -1 : 0;\r\n}\r\n\r\nfunction checkIntersect(l1, l2) {\r\n    var p1 = l1[0];\r\n    var p2 = l1[1];\r\n    var p3 = l2[0];\r\n    var p4 = l2[1];\r\n  return (Turn(p1, p3, p4) !== Turn(p2, p3, p4)) && (Turn(p1, p2, p3) !== Turn(p1, p2, p4));\r\n}\r\n\r\nexport default checkIntersect;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Line/checkIntersect.js\n **/","export default function lineIntersect(l1, l2) {\r\n    var x1 = l1[0].x;\r\n    var y1 = l1[0].y;\r\n\r\n    var x2 = l1[1].x;\r\n    var y2 = l1[1].y;\r\n\r\n    var x3 = l2[0].x;\r\n    var y3 = l2[0].y;\r\n\r\n    var x4 = l2[1].x;\r\n    var y4 = l2[1].y;\r\n    var ua, ub, denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\r\n    if (denom === 0) {\r\n        return null;\r\n    }\r\n    ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denom;\r\n    ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denom;\r\n    return {\r\n        x: x1 + ua * (x2 - x1),\r\n        y: y1 + ua * (y2 - y1),\r\n        z: 0\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Line/lineIntersect.js\n **/","import proj4 from 'proj4/lib/index';\r\nproj4.defs('EPSG:32632', '+title=EPSG Projection 32632 - WGS 84 / UTM zone 32N +proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\r\nproj4.defs('EPSG:32633', '+title=EPSG Projection 32633 - WGS 84 / UTM zone 33N +proj=utm +zone=33 +ellps=WGS84 +datum=WGS84 +units=m +no_defs');\r\n\r\nexport default function transform(coord, from, to) {\r\n    return proj4(from, to, coord);\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/util/transform.js\n **/","module.exports = proj4;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"proj4\"\n ** module id = 13\n ** module chunks = 0\n **/","import {\r\n    TextureLoader,\r\n    LinearFilter\r\n} from 'three';\r\n\r\nimport createQueryString from './util/createQueryString';\r\n\r\nfunction Texture(textureConfig, dim) {\r\n\r\n    function _getImageMap() {\r\n        var imageCall;\r\n        if (textureConfig.imgUrl) { //IMAGE\r\n            return textureConfig.imgUrl;\r\n        }\r\n        var params = {\r\n            service: 'wms',\r\n            version: '1.3.0',\r\n            request: 'getMap',\r\n            crs: dim.crs,\r\n            WIDTH: dim.imgWidth,\r\n            HEIGHT: dim.imgHeight,\r\n            bbox: dim.envelope.bbox(),\r\n            layers: textureConfig.wmsLayers,\r\n            format: textureConfig.wmsFormat + textureConfig.wmsFormatMode\r\n        };\r\n        return textureConfig.wmsUrl + '?' + createQueryString(params);\r\n    };\r\n\r\n    function loadTexture(material, callback) {\r\n        var loader = new TextureLoader(),\r\n            image = _getImageMap();\r\n        // load a resource\r\n        loader.load(\r\n            image,\r\n            function (texture) {\r\n                //Texture is probably not the power of two.\r\n                //Avoid warning: Apply THREE.LinearFilter or THREE.NearestFilter\r\n                texture.minFilter = LinearFilter;\r\n                material.map = texture;\r\n                material.needsUpdate = true;\r\n                if (callback) {\r\n                    callback(texture);\r\n                }\r\n            },\r\n            // Function called when download progresses\r\n            function (xhr) {},\r\n            // Function called when download errors\r\n            function (xhr) {\r\n                console.log('An error happened on texture load: ' + image);\r\n            }\r\n        );\r\n    };\r\n    return {\r\n        loadTexture: loadTexture\r\n    };\r\n}\r\n\r\nexport default Texture;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Texture.js\n **/","import {\r\n    PlaneGeometry,\r\n    MeshBasicMaterial,\r\n    DoubleSide,\r\n    BackSide,\r\n    Geometry,\r\n    Vector3,\r\n    Face3,\r\n    Group,\r\n    Mesh\r\n} from 'three';\r\nimport * as _ from 'underscore';\r\n\r\nimport TIFFParser from './../tiff-js/tiff.js';\r\n\r\nimport createQueryString from './util/createQueryString';\r\n\r\n\r\nvar Terrain = function (terrainConfig, dim) {\r\n\r\n    var isTiff = (terrainConfig.format === 'geotiff');\r\n    var geometry;\r\n    var minHeight, midHeight;\r\n\r\n    function _getTiffHeights(xhr) {\r\n        var tiffParser = new TIFFParser();\r\n        var tiffArray = tiffParser.parseTIFF(xhr.response);\r\n        var i = -1;\r\n        var heights = [];\r\n        for (var j = 0; j < tiffArray.length; j++) {\r\n            for (var k = 0; k < tiffArray[j].length; k++) {\r\n                heights.push(parseInt(tiffArray[j][k][0], 10));\r\n            }\r\n        }\r\n        return heights;\r\n    }\r\n\r\n    function _getXYZHeights(xhr) {\r\n        var numVertices = geometry.vertices.length;\r\n        var lines = xhr.responseText.split('\\n');\r\n        var heights = [];\r\n        for (var i = 0, l = numVertices; i < l; i++) {\r\n            heights[i] = parseInt(lines[i].split(' ')[2], 10);\r\n        }\r\n        return heights;\r\n    }\r\n\r\n    function _parseHeights(xhr) {\r\n\r\n        var heights = isTiff\r\n            ? _getTiffHeights(xhr)\r\n            : _getXYZHeights(xhr);\r\n\r\n        var minHeight = _.min(heights);\r\n        var maxHeight = _.max(heights);\r\n\r\n        //The Vertical center of the height model is adjusted to (min + max) / 2.\r\n        //If the map covers an area of high altitudes (i.e. Galdhøpiggen) above sea level,\r\n        //a tipping of the model will cause the map to disappear over the screen top without this\r\n        //adjustment.\r\n        //On a computer you can move the model down width a right-click-drag,\r\n        //but not on a mobile device.\r\n        var midHeight = (maxHeight + minHeight) / 2;\r\n\r\n        return {\r\n            height: heights,\r\n            midHeight: midHeight,\r\n            minHeight: ((minHeight - midHeight) / dim.zMult)\r\n        };\r\n    };\r\n\r\n    function _createGeometry() {\r\n        geometry = new PlaneGeometry(\r\n            dim.demWidth,\r\n            dim.demHeight,\r\n            dim.demWidth - 1,\r\n            dim.demHeight - 1\r\n        );\r\n    };\r\n\r\n    function _terrainLoaded(data) {\r\n        for (var i = 0, l = geometry.vertices.length; i < l; i++) {\r\n            geometry.vertices[i].z = ((data.height[i] - data.midHeight) / dim.zMult);\r\n        }\r\n        geometry.loaded = true;\r\n        geometry.verticesNeedUpdate = true;\r\n        minHeight = data.minHeight;\r\n        midHeight = data.midHeight;\r\n    }\r\n\r\n    function loadTerrain(callback) {\r\n        var demRequest = new XMLHttpRequest();\r\n\r\n        var params = {\r\n            SERVICE: 'WCS',\r\n            VERSION: '1.0.0',\r\n            REQUEST: 'GetCoverage',\r\n            COVERAGE: terrainConfig.coverage,\r\n            FORMAT: terrainConfig.format,\r\n            bbox: dim.envelope.bbox(),\r\n            CRS: dim.crs,\r\n            RESPONSE_CRS: dim.crs,\r\n            WIDTH: dim.demWidth,\r\n            HEIGHT: dim.demHeight\r\n        };\r\n\r\n        var wcsCall = terrainConfig.wcsUrl + '?' + createQueryString(params);\r\n        if (isTiff) {\r\n            demRequest.responseType = 'arraybuffer';\r\n        }\r\n        demRequest.open('GET', wcsCall, true);\r\n        demRequest.onreadystatechange = function () {\r\n            if (this.readyState === 4) {\r\n                _terrainLoaded(_parseHeights(this));\r\n                callback();\r\n            }\r\n        };\r\n        demRequest.send();\r\n    };\r\n\r\n    function _createSideMesh(filter) {\r\n        var points = _.chain(geometry.vertices)\r\n            .filter(filter)\r\n            .map(function (vertex) {\r\n                return [\r\n                    new Vector3(vertex.x, vertex.y, vertex.z),\r\n                    new Vector3(vertex.x, vertex.y, minHeight)\r\n                ];\r\n            })\r\n            .flatten()\r\n            .value();\r\n        var first = _.first(points).clone();\r\n        var last = _.last(points).clone();\r\n        first.z = minHeight;\r\n        last.z = minHeight;\r\n\r\n        var sideGeometry = new Geometry();\r\n        points.unshift(first);\r\n        points.push(last);\r\n\r\n        var faces = _.map(_.range(1, points.length - 1), function (i) {\r\n            return new Face3(i - 1, i, i + 1);\r\n        });\r\n\r\n        sideGeometry.vertices = points;\r\n        sideGeometry.faces = faces;\r\n        return new Mesh(sideGeometry, new MeshBasicMaterial({\r\n            side: DoubleSide,\r\n            color: terrainConfig.boxColor,\r\n            wireframe: false\r\n        }));\r\n    }\r\n\r\n    function getSides() {\r\n        if (!terrainConfig.showBox) {\r\n            return null;\r\n        }\r\n        var material = new MeshBasicMaterial({\r\n            wireframe: false,\r\n            color: terrainConfig.boxColor,\r\n            side: BackSide\r\n        });\r\n\r\n        var backGeom = new PlaneGeometry(\r\n            dim.demWidth,\r\n            dim.demHeight,\r\n            dim.demWidth - 1,\r\n            dim.demHeight - 1\r\n        );\r\n\r\n        for (var i = 0, l = backGeom.vertices.length; i < l; i++) {\r\n            backGeom.vertices[i].z = minHeight;\r\n        }\r\n\r\n        var group = new Group();\r\n        group.add(new Mesh(backGeom, material));\r\n\r\n        geometry.computeBoundingBox();\r\n        var bbox = geometry.boundingBox;\r\n\r\n        var filterLeft = function (vertex) {\r\n            return vertex.x === bbox.min.x;\r\n        };\r\n\r\n        var filterBottom = function (vertex) {\r\n            return vertex.y === bbox.min.y;\r\n        };\r\n\r\n        var filterRight = function (vertex) {\r\n            return vertex.x === bbox.max.x;\r\n        };\r\n\r\n        var filterTop = function (vertex) {\r\n            return vertex.y === bbox.max.y;\r\n        };\r\n\r\n        group.add(_createSideMesh(filterBottom));\r\n        group.add(_createSideMesh(filterRight));\r\n        group.add(_createSideMesh(filterLeft));\r\n        group.add(_createSideMesh(filterTop));\r\n        return group;\r\n    }\r\n\r\n    _createGeometry();\r\n\r\n    return {\r\n        loadTerrain: loadTerrain,\r\n        getGeometry: function getGeometry() {\r\n            return geometry;\r\n        },\r\n        minHeight: function () {\r\n            return minHeight;\r\n        },\r\n        midHeight: function () {\r\n            return midHeight;\r\n        },\r\n        getSides: getSides,\r\n\r\n        showBox: terrainConfig.showBox\r\n    };\r\n};\r\n\r\nexport default Terrain;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Terrain.js\n **/","import * as _ from 'underscore';\r\nimport {\r\n    PlaneGeometry,\r\n    MeshPhongMaterial,\r\n    Mesh,\r\n    DoubleSide\r\n} from 'three';\r\n\r\nimport Texture from './Texture';\r\nimport transform from './util/transform';\r\n\r\nfunction Profiles(profiles, terrain, dim) {\r\n\r\n    function _transformPoint(sSource, sDest, x, y) {\r\n        if (typeof x === 'string') {\r\n            x = 1.0 * x;\r\n            y = 1.0 * y;\r\n        }\r\n        return transform([x, y], sSource, sDest);\r\n    };\r\n\r\n    function _createProfile(profile, config) {\r\n            var verticalGeometry = new PlaneGeometry(1, 1);\r\n            var verticalMaterial = new MeshPhongMaterial({\r\n                side: DoubleSide,\r\n                transparent: true\r\n            });\r\n            var crsSource = profile.CRS;\r\n\r\n            //Check and transform to another map projection\r\n\r\n            if (crsSource !== config.crsDestination) {\r\n                var pointStart = _transformPoint(crsSource, config.crsDestination, profile.xyStart.x, profile.xyStart.y),\r\n                    pointEnd = _transformPoint(crsSource, config.crsDestination, profile.xyEnd.x, profile.xyEnd.y);\r\n                    profile.xyStart.x = pointStart[0];\r\n                    profile.xyStart.y = pointStart[1];\r\n                    profile.xyEnd.x = pointEnd[0];\r\n                    profile.xyEnd.y = pointEnd[1];\r\n            }\r\n\r\n            //Local transformation\r\n            var newStartX = config.kX * profile.xyStart.x - config.kX * dim.envelope.minX() - (dim.demWidth / 2),\r\n                newStartY = config.kY * profile.xyStart.y - config.kY * dim.envelope.minY() - (dim.demHeight / 2),\r\n                newEndX = config.kX * profile.xyEnd.x - config.kX * dim.envelope.minX() - (dim.demWidth / 2),\r\n                newEndY = config.kY * profile.xyEnd.y - config.kY * dim.envelope.minY() - (dim.demHeight / 2),\r\n                newStartZ = profile.zStart - terrain.midHeight(),\r\n                newEndZ = profile.zEnd - terrain.midHeight(),\r\n                verticalMesh = new Mesh(verticalGeometry, verticalMaterial);\r\n\r\n            //XY\r\n            verticalMesh.geometry.vertices[0].x = newStartX;\r\n            verticalMesh.geometry.vertices[0].y = newStartY;\r\n            verticalMesh.geometry.vertices[1].x = newEndX;\r\n            verticalMesh.geometry.vertices[1].y = newEndY;\r\n            verticalMesh.geometry.vertices[2].x = newStartX;\r\n            verticalMesh.geometry.vertices[2].y = newStartY;\r\n            verticalMesh.geometry.vertices[3].x = newEndX;\r\n            verticalMesh.geometry.vertices[3].y = newEndY;\r\n\r\n            //Z\r\n            profile.zStart - terrain.midHeight();\r\n            verticalMesh.geometry.vertices[0].z = newStartZ / dim.zMult; //900/zMult;\r\n            verticalMesh.geometry.vertices[1].z = newStartZ / dim.zMult; //900/zMult;//\r\n            verticalMesh.geometry.vertices[2].z = newEndZ / dim.zMult; //-1406/zMult;\r\n            verticalMesh.geometry.vertices[3].z = newEndZ / dim.zMult; //-1406/zMult;\r\n\r\n\r\n            var texture = Texture({\r\n                type: 'image',\r\n                imgUrl: profile.imgUrl\r\n            }, null);\r\n            texture.loadTexture(verticalMaterial);\r\n\r\n            return verticalMesh;\r\n    }\r\n\r\n    function load(callback) {\r\n        //json response for profile metadata db query\r\n        var geometry = terrain.getGeometry();\r\n        var modelLL = geometry.vertices[geometry.vertices.length - dim.demWidth];\r\n        var modelUR = geometry.vertices[dim.demWidth - 1];\r\n        var data = {\r\n            crsDestination: dim.crs,\r\n            kX: ((modelUR.x - modelLL.x) / dim.envelope.width()),\r\n            kY: ((modelUR.y - modelLL.y) / dim.envelope.height())\r\n        };\r\n\r\n        var meshes = _.map(profiles, function (profile) {\r\n            return _createProfile(profile, data);\r\n        });\r\n\r\n        callback(meshes);\r\n    }\r\n\r\n    return {\r\n        load: load\r\n    };\r\n}\r\n\r\nexport default Profiles;\n\n\n/** WEBPACK FOOTER **\n ** ./src/Profiles.js\n **/","import * as _ from 'underscore';\r\n\r\nimport transform from './util/transform';\r\n\r\nexport default function Envelope(bbox, crs, bboxCrs) {\r\n    var bbox = _.map(bbox.split(','), parseFloat);\r\n    var ne = [bbox[0], bbox[1]];\r\n    var sw = [bbox[2], bbox[3]];\r\n    if (crs !== bboxCrs) {\r\n        ne = transform(ne, bboxCrs, crs);\r\n        sw = transform(sw, bboxCrs, crs);\r\n    }\r\n\r\n    var envelope = ne.concat(sw);\r\n\r\n    function width() {\r\n        return envelope[2] - envelope[0];\r\n    }\r\n\r\n    function height() {\r\n        return envelope[3] - envelope[1];\r\n    }\r\n\r\n    function getBbox() {\r\n        return envelope.join(',');\r\n    }\r\n\r\n    function minX() {\r\n        return envelope[0];\r\n    }\r\n\r\n    function minY() {\r\n        return envelope[1];\r\n    }\r\n\r\n    return {\r\n        width: width,\r\n        height: height,\r\n        bbox: getBbox,\r\n        minX: minX,\r\n        minY: minY,\r\n        mapCrs: crs\r\n    };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Envelope.js\n **/"],"sourceRoot":""}